{quoter:32=space} ' make runs of spaces easier to read
{undef:swiftlink} ' for switching to swiftlink rs232, not ready yet
{crunch:on}
{alpha:alt} ' c64list3.50: converts to upper/lowercase quoted strings

{number:0}
	on peek(829) goto {:3000},{:4000}
{number:1000}
	goto {:1811}
{:1001}
	gosub {:1002}:&,22,1
{:1002}
	print# 15,"p{$02}"chr$(x and 255)chr$(x/256)"{$01}":return
{:1003}
	&,53,a:im=2+a:goto {:2426}
{:1004}
	a=val(mid$(fl$,a,1)):return
{:1005}
	pl=.:goto {:1028}
{:1006}
	an$=uu$:on-(an$<>"") gosub {:1260}:on -(an$<>"") goto {:1264}:pl=1:&,1:goto {:1260}
{:1007}
	&"{pound}g1":a$=an$:return
{:1008}
	&"{f6}Device,Drive: {pound}i1":an$="  "+an$:return
{:1009}
	dv%(.)=d1%:dr%(.)=d2%:dv%=dv%(dr):dr$=mid$(str$(dr%(dr)),2)+":":d3%=dr%(dr):return
{:1010}
	close 15:gosub {:1009}:open 15,dv%,15:return
{:1011}
	close 2:gosub {:1010}:open 2,dv%,2,dr$+a$
{:1012}
	input# 15,e%,e$,t%,s%:a$="{f6}Status:{pound}#2{pound}%e:{pound}$e:{pound}%t:{pound}%s{f6}":return
{:1013}
	dr=5
{:1014}
	cm$=a$+"":gosub {:1360}:gosub {:1010}:if a$=pr$then e%=.:return
	a$=dr$+"+."+a$:load a$,dv%:pr$=cm$:lm$="":goto {:1012}
{:1016}
	gosub {:1013}:goto {:3000}
{:1019}
{number:1019}
	a=int(mn%/60):pt%=-(a>=p2% and a<p3%)*sgn(p1%):return
{:1023}
{number:1023}
	gosub {:1024}:a$=a$+",s,w":goto {:1011}
{:1024}
	gosub {:1010}:print# 15,"s"dr$a$:return
{:1025}
' x-tec removed "gosub 1001" here - lets SB/WF/VF save now
' 1/17/2018: remove "input# 2,st(x):" -  breaks +/NM.maint
	st(x)=st(x)+i
{:1026}
	gosub {:1001}:print# 2,st(x):return
{:1027}
	dr=3:a$="e."+b$+",s,"+a$:goto {:1011}
{:1028}
	poke 53249,pl:lp=.:&,1:return
	&:return
{:1030}
	sh=.:rc=.:poke 2038,.:poke 2024,-(qe=.and rq=1)*255
	&,3,sr:s=st
	poke 144,s and 255:a=rc:gosub {:1914}:rc=a:return
{:1034}
{number:1034}
	im=7:goto {:2400}
	im=1:goto {:2403}
	im=2:goto {:2403}
{:1038}
{number:1038}
' add user to u.index:
	im=8:goto {:2400}
' 1039: QM - QuickMail
	im=1:goto {:2401}
' 1040
	im=9:goto {:2400}
' 1041: TT - top ten list
	im=2:goto {:2401}
' 1042: PS - personal signatures
	im=3:goto {:2401}
{:1045}
{number:1045}
' 1045: load "++ index", open cmd channel, get highest user # in uh% and a%
	im=11:goto {:2400}
' 1046: search for handle 'an$' in "u.config", return id in 'a%' and 'i'
	im=10:goto {:2400}
' 1047: ME - Exchange ID with another user (sysop only, immediate mode only)
	im=13:goto {:2400}
' 1048 - FIXME: copy of 1668, replace with "goto1668" in case other modules reference this
' (can't find any yet)
	pr$="":im$="":lm$="":return
' 1049: ST - User statistics
	im=1:goto {:2412}
' 1050: BA - Board Activity Register
	im=1:goto {:2414}
{:1060}
{number:1060}
	dr=3:a$="e.stats":goto {:1011}
{:1061}
	dr=3:a$="e.access":goto {:1011}
{:1062}
	dr=2:a$="m."+left$(tt$,14)+",s,"+a$:goto {:1011}
{:1063}
	dr=3:a$="e.data":goto {:1011}
{:1064}
	b$="log"+left$(lt$,am):goto {:1027}
{:1065}
	dr=6:a$="u.config":goto {:1011}
{number:1067}
	cm$=a$:gosub {:1360}:gosub {:1014}:f1=sgn(e%):goto {:3000}
' 1068: append or write e.b$:
	a$="a":gosub {:1027}:if e%then a$="w":gosub {:1027}
' 1069: write user account data:
	print# 2,na$r$id;r$d1$r$ac%r$ph$r$rn$r$co$r$ad$:return
' 1070: write user account to u.config:
	im=1:goto {:2400}
	im=2:gosub {:2400}
{:1072}
{number:1072}
	&,52,17,lf:&,52,20,em:poke 951,ll%:poke 971,mp%:poke 970,.:return
' 1073: load "user online" screen mask
	im=1:goto {:2426}
{:1074}
{number:1074}
' write tt$() array elements 1 - (kk-1) to open lfn#2:
	&,14,2,kk-1:print# 2,"{up arrow}":close 2:goto {:1081}
{number:1075}
{:1075}
	&"{clear}"
{number:1076}
{:1076}
	gosub {:1010}:close 5:open 5,dv%,5,dr$+a$+",s,r":c$=b$:gosub {:1012}:b$=c$:&"{f6}"
	if e%=.then sr=5:gosub {:1030}:sr=2
	close 5:return
{:1079}
{number:1079}
	if dr<7 then if bf(dr)>-1 then gosub {:1009}:a=bf(dr):bf=a:return
{:1081}
{number:1081}
	gosub {:1010}:on-(dv%<>lk%)goto {:1083}:a$=dr$:if dr$="10:"then a$="a"
	a=2:print# 15,"lg"left$(a$,1):input# 15,e%,a$,a$,a$,a$,a$:goto {:1084}
{:1083}
{number:1083}
	a=1:close 2:open 2,dv%,.,"$"+dr$+"{black}":get#2,a$,a$:&,8,2,1:&,8,2,1:close 2
{:1084}
{number:1084}
	a=val(a$)*a:bf=a:goto {:1400}
	a$="{black},u,w":gosub {:1011}:close 2
	a$="{black}":gosub {:1024}:a=-sgn(e%):return
{number:1088} ' BF - blocks free
	im=5:goto {:2404}
' 1089: DR - disk directory w/X-Tec's auto-wildcard mod
	gosub {:1470}:on a goto {:1995}:&"{f6}Pattern: ":gosub {:1499}:b$="*"
' TODO: shorten with &,15,6
	for i=1 to len(an$):if mid$(an$,i,1)="*" then b$=""
	next:close 1:open 1,dv%,.,"$"+dr$+an$+b$:&"{f6}":&,8,1:close 1:return
{:1093}
{number:1093}
	for i=1 to 4:&,11,i:next
	&,11,.:return
' 1095: log a$ to disk unless using immediate login:
	on i%goto {:1603}:gosub {:1490}
{:1096}
{number:1096}
' is "print log entries" enabled?
	a=a%:&,52,13,3:b=a%:a%=a:on b+1 goto {:1603}:open 16,4,15:close 16:if st then return
	print# 4,a$:return
{:1098}
{number:1098}
	cm$=p$:gosub {:1360}:gosub {:1100}
' TODO: increase cm$ string length (21)
	cm$=left$(p$,11)+":"+left$(an$,4):gosub {:1360}:cm$=p$:return
{:1100}
{number:1100}
	s=.:sh=.:gosub {:1914}:poke 53252,38:gosub {:1908}:&"{f6:2}":goto {:1006}
{:1196}
{number:1196}
	if dv%=lk% then print# 15,"l800"
	return
' 1198: TZ - change user's time zone
	im=4:goto {:2428}
{:1200}
{number:1200}
	dr$=mid$(str$(dr%(5)),2)+":":dv%=dv%(5):pr$="":load dr$+"image",dv%
{:1260}
{number:1260}
' ^?, activity queue
	on-(an$="{f8}{f2}")goto {:1265}
' ^x, recall command #x
	if left$(an$,1)="{f8}"then an$=hs$(10-val(mid$(an$,2,1))):goto {:1264}
{:1262}
{number:1262}
' 140=Image ^
	&,15,6,140:uu$=an$:an$=a$
{:1263}
{number:1263}
	for ct=1 to 9:hs$(ct)=hs$(ct+1):next:hs$(10)=an$:return
{:1264}
{number:1264}
	&p$+": {pound}v7{f6}":return
{:1265}
{number:1265}
	for ct=1 to 10:a%=10-ct:a$=hs$(ct):&"{f8}{pound}%a: {pound}$a{f6}":next:an$="":uu$="":return
{:1300}
{number:1300}
	a$=z$:y$=pr$:gosub {:1016}:a$=y$:on-(lc<>1)goto {:1013}:return
{:1301}
{number:1301}
	a$=z$:goto {:1016}
{number:1305}
	im=3:goto {:2404}
{number:1318} ' EM - email
	br=.:mm=.:a=9:gosub {:1004}:on-(a<>.)goto {:1301}:x=4:gosub {:1980}:goto {:1812}
{:1320}
{number:1320}
' &,52,14,3: is "Disable U/D Section" enabled?
	&,52,14,3:if a%then x=1:gosub {:1980}:goto {:1812}
	gosub {:1019}:a=5:gosub {:1004}:b=a:a=15:gosub {:1004}
' &,52,15,3: is "300 Baud U/D Lockout" enabled?
	&,52,15,3:if b=. or (pt% and a=.) or (a%<>. and qb<1200) then x=4:gosub {:1980}:goto {:1812}
{:1323}
{number:1323}
	f1=.:a$=z$+str$(nl):gosub {:1350}:a$=z$:goto {:1301}
{number:1330} ' ZZ - local mode
	im=7:goto {:2404}
{number:1332}
	im=8:goto {:2404}
{number:1335}
' VERSION - BBS version, ML date/revision
	&,5:a=lp:lp=1:&"{f6}Image BBS 64 V{pound}!a.{pound}%a: {pound}$a{f6}"
{:1336}
' IM date also displayed at boot time
	gosub {:1338}:&,15:&"IM Revision: "+left$(an$,26)+"M{f6}":return
{:1338}
' used at BBS bootup to set clock to something sane
	an$="21906258326":return
{number:1340}
' SB, UD, UX
	bn=.:r=int(val(mid$(an$,3))):if r<1 then r=1
{number:1342}
	on-(z$="UD"or z$="UX")goto {:1320}:goto {:1323}
{:1345}
{number:1345}
	gosub {:1351}:goto {:1812}
{number:1348} ' NU - New User rules/etc.
	a$="new user":goto {:1350}
' 1349: CF - BBS configuration
	a$="config"
{:1350}
{number:1350}
	a$="s."+a$:dr=1:goto {:1075}
{:1351}
{number:1351}
' read access-aware "e.menu "+x file (im.menus)
	im=1:goto {:2430}
' 1352: ?? - local mode commands menu
	im=2:goto {:2404}
' 1353: read SEQ text editor menu
'	dr=1:a$="s.menu 3":goto {:1075}
	a$="menu 3":goto {:1350}
' 1354: RD - read a SEQ file
	im=4:goto {:2404}
{:1360}
{number:1360}
' peek(17139)=0: screen mask on
' &,69,<col>,<row>,"string",$color ($8x=reverse; 0-based)
' fixed: cm$ can be up to 21 chars now (I=00 is idle timer)
' fixed: clear cm$ area
' fixed: lines are short enough to edit on c64
' maybe: specify color of title as $80+c, for reverse text)
' to clear Area: cm$="":gosub 1360
	if peek(17139)=. then:&,69,4,21," "+left$(cm$+"{space:21}",21)+" ",$8c
{number:1362}
	return
{:1370}
{number:1370}
	&,69,c,22,right$(str$(a+1e5),b),$81:return
{number:1372}
	&,40
' 1373: check free memory:
	z%=(peek(52)-peek(50))*256+peek(51)-peek(49):return
' 1374: screen mask, line 22: display c=00000 (total calls to system) and n=000 (calls today?)
' a=what to display, b=# of digits, c=column (zero-based)
	a=ca:b=5:c=2:gosub {:1370}:a=cn:b=3:c=10:goto {:1370}
{number:1375}
	a$=co$(co%):co$=a$
{:1376}
{number:1376}
' display a$ in 16 character message window
	an$=a$:&,9:return
' clear message window
	a$="{space:16}":goto {:1376}
{:1400}
{number:1400}
	for a=1 to 6:if dv%(a)=dv%and dr%(a)=val(dr$)then bf(a)=bf
{number:1402}
	next:a=bf:return
{number:1450} ' DC - DOS command
	gosub {:1470}:on a goto {:1995}:&"{f6}Disk Command?: ":poke 53252,58
{number:1452}
	gosub {:1499}:z$=an$:if z$=""or z$="@"then gosub {:1010}:gosub {:1012}:&:return
	b$=left$(z$,1):if b$="n"or b$="s"then gosub {:1901}:if a=.then return
	gosub {:1010}:print# 15,z$:gosub {:1012}:&:return
{number:1460} ' CA - Credit Add (sysop only)
	im=1:goto {:2404}
{:1470}
{number:1470}
' 1470: evaluate DCdv,dr command line
	a=int(val(mid$(an$,3,2))):if a>.then if a<7 then dr=a:goto {:1474}
' FIXME: why increase to 29?
'	if a<7 or a>15 then a=8
	if a<7 or a>29 then a=8
{:1472}
{number:1472}
' 133=Image ","
	&,15,6,133:d2%=val(an$):d1%=a:dr=.:dv%(.)=d1%:dr%(.)=d2%
{:1474}
{number:1474}
	gosub {:1010}:close 15:a=-(st<>.):return
{:1490}
{number:1490}
	c$=a$:a$="a":gosub {:1064}:if e%=.then print# 2,c$
{number:1492}
	close 2:a$=c$:an$=c$:return
{:1499}
{number:1499}
	&"{pound}i0":if an$=""then return
' 1500: un-translate "special" f-key characters in an$
{:1500}
{number:1500}
	&,15,2:return
{:1520}
{number:1520}
	a=mn%:return
{:1530}
{number:1530}
' beep x times:
	&,25,.,x
{:1603}
{number:1603}
	return
{number:1604}
' load im.editor, start with empty buffer
	im=1:goto {:2402}
{number:1610}
' load im.editor, preserve existing buffer
	im=2:goto {:2402}
{:1630}
{number:1630}
	f1=.:gosub {:1920}:goto {:1812}
{:1634}
{number:1634}
	gosub {:1061}:x=ac%+1:gosub {:1001}:&,2,2:ag$=a$:&,2,2:close 2
	if len(fl$)<len(a$) then fl$=fl$+mid$(a$,len(fl$)+1)
	if len(fl$)>len(a$) then fl$=a$
	if ac%<>ao% then fl$=a$:ao%=ac%
	a=6:gosub {:1004}:le=(a+1)*10:a=16:gosub {:1004}:poke 830,a:a=20:gosub {:1004}:da%=a
	return
' 1640: C - chat request
	im=4:goto {:2400}
{number:1642} ' LD - last date
	im=1:goto {:2408}
{number:1644} ' LG - BBS activity log
	im=2:goto {:2408}
{number:1646} ' EX - exchange credits for time
' load im.comm1
	im=3:goto {:2408}
{number:1648}
	im=4:goto {:2408}
{number:1650} ' TM - Mini Term
' FIXME: BBS reports "unknown command", even though local mode enabled and ECS command active
	im=1:goto {:2410}
{number:1652}
	im=2:goto {:2410}
{number:1654}
	im=3:goto {:2410}
{number:1656} ' T - time/date
	im=5:goto {:2400}
{number:1660} ' EP - Edit Parameters
	&"{f6}Edit (I)nfo or (P)arameters? {pound}g1{pound}v7{f6}":a=-(an$="P")-2*(an$="I")
{number:1661}
' also called from +.new
' a=1: edit terminal params, a=2: edit account info
	im=1:on a goto {:2406},{:2428}:return
{number:1662} ' AT - change graphics translation
	im=2:goto {:2406}
{number:1664} ' PW - change password
	im=2:goto {:2428}
{number:1666} ' PR - change transfer protocol
	im=4:goto {:2406}
{number:1667}
	im=5:goto {:2406}
{number:1668} ' RL - clears strings - force a ReLoad of a module under testing?
	im$="":pr$="":lm$="":return
{number:1670} ' RP - read program
	im=6:goto {:2404}
{number:1678} ' F - feedback
	b=.:o$="Feedback":&"{f6}Leave {pound}$o?: ":gosub {:1902}:if a=. then return
{number:1680}
' check etcetera drive blocks free; >35?
	dr=3:gosub {:1079}:if a<35 then {:1978}
{number:1681}
	im=1:goto {:2422}

' Pinacolada: subroutined this, moved from 1702 -> 1686
{number:1686}
{:sub.logoff_option}
' 1907 Yes/No defaults to Yes
	if right$(an$,1)<>"!" then:&"{f6:2}Logoff?: ":gosub {:1907}
{number:1688}
	return

{:1690}
{number:1690}
' logoff options
' 12/31/2017: move "if... then ...gosub" (43 bytes) to {:sub.logoff_option} (1686)
'	f4=.:if right$(an$,1)<>"!"then:&"{f6:2}Logoff?: ":gosub {:1907}:if a=.then return
	f4=.:gosub {:sub.logoff_option}:if a=. then return
{number:1692}
	f4=1.3:return
{:1694}
{number:1694}
'	a=1:if right$(an$,1)<>"!"then:&"{f6:2}Logoff?: ":gosub {:1907}
	gosub {:sub.logoff_option}:if a=. then f1=-3*(x=2):on x goto {:1630},{:3000},{:3000}
{:1696}
{number:1696}
	cd%=.:if mid$(z$,2,1)<>"%"then ld$=lt$
	if right$(an$,1)="!"then f1=2:goto {:1700}
{:1698}
{number:1698}
	f1=1:if tr%<1 then b$="Time":gosub {:1985}:f1=2
{:1700}
{number:1700}
	a$="lo":goto {:1016}

' {number:1702}
' {:sub.logoff_option}
' ' 1907 Yes/No defaults to Yes
' 	if right$(an$,1)<>"!"then &"{f6:2}Logoff?: ":gosub {:1907}
' {number:1704}
' 	return

{number:1736}
{:1736}
' skip loading already loaded protocol
	if a=pr then {:1740}
{number:1738}
{:1738}
	pr=a:dr=5:gosub {:1009}
	a$=dr$+"++"+str$(a):&,7,dv%,2
{number:1740}
{:1740}
	d4$=mid$("Punter X-ModemCopier Slow P IndexerClock  ",1+pr*7,7):return
{number:1750}
{:1750}
	if a$<>ml$ then ml$=a$:dr=5:gosub {:1009}:a$=dr$+"++ "+a$:&,7,dv%,2
{number:1752}
' no reference
	an$=ml$:&,15,1:d4$=an$:return
{:1800}
{number:1800}
	f4=.:gosub {:1805}:on ec goto {:1801},{:1802},{:1803},{:1804}:x=5:goto {:1980}
{:1801}
{number:1801}
	z$=ef$:f4=1.1:&,28,1:return
{:1802}
{number:1802}
	f4=1.2:&,28,1:return
{:1803}
{number:1803}
	z$=ef$:goto {:1300}
{:1804}
{number:1804}
	a%=asc(ef$+nl$)+256*asc(mid$(ef$,2,1)+nl$):&,42,1
' TODO: Message about inactive command, ef% is used in "image", but not here
' 	if ef% and 8 then:&"{f6}Sorry, that function is temporarily disabled.{f6}":return

{:1805}
{number:1805}
' password-protected by ep$, and/or costs ec% credits to run command:
' FIXME: where is b% used? can that be removed?
' X-Tec's fix:
'	on -(ec%=.) goto {:1806}:b%=ec%:if ec%>cr then:&"{red}Not Enough Credits!{f6}":ec=.:return
	if ec then b%=ec%:if ec%>cr then:&"{red}Not Enough Credits!{f6}":ec=.:return
' Pinacolada's change: string variable, subtract credits only after correct password entered
{:1806}
{number:1806}
	p$="Password":if ep$="" or id=1 then return
'	cr=cr-ec%:&"{f6}{white}Password{blue}:{white} ":&,6:if an$=ep$ then return
	&"{f6}{white}{pound}$p{blue}:{white}":&,6:if an$=ep$ then cr=cr-ec%:return
'	&"{f6}{red}Incorrect Password.{f6}":ec=.:return
	&"{f6}{red}Incorrect {pound}$p.{f6}":ec=.
{:1810}
{number:1810}
	return
{:1811}
{number:1811}
	gosub {:1093}:lc=1
{:1812}
{number:1812}
	&,28,1:on tr%+1 goto {:1698}:gosub {:1072}:if lc<>1 then lc=1:gosub {:1093}:sy$=""
' &,52,$19,3: is "Trc right side" (undefined) enabled? (does nothing regardless)
	&,52,$19,3:on a% gosub {:1810}:if pf then a$="GF":goto {:1016}
{:1814}
{number:1814}
	&,28,1:gosub {:1930}:p$=po$:gosub {:1098}:on tr%+1 goto {:1698}:if an$="" then {:1345}
	gosub {:1850}:on f4 goto {:1842}:on rs goto {:1812}
{number:1820}
' FIXME: 2100: why DIMension Image 1.2 arrays each time?
'	if zz and an$="R" then gosub {:2100}:goto {:1900}
	if zz then if an$="R" then {:1890}
' 1890: X-Tec's "Device,Drive" mod:
'	if zz and an$="R" then gosub {:2100}:goto {:1890}
' "TEST": loads "image", renumbered/RAM-light version of "im",
' runs Image 2.0's "i.*" modules
	if an$="TEST" then {:1200}
{number:1840}
	x=1:on -(a$="Q")-(a$="{f2}")*2 goto {:1694},{:1345}
{:1842}
{number:1842}
	if f4 then gosub {:2100}:on -(f4=1.1)-2*(f4=1.2)-3*(f4=1.3) goto {:1301},{:1804},{:1696}
{number:1844}
	if rc or val(an$)=.then {:1848}
	a%=val(an$):if a%<1 or a%>4 then an$="":goto {:1848}
	dr=3:a$="e.macs":gosub {:1011}:on e%goto {:1848}:x=id*4-4+a%:gosub {:1001}:&,2,2:an$=a$
	if a$<>"{up arrow}"then uu$=a$:goto {:1814}
{:1848}
{number:1848}
	close 2:gosub {:1989}:goto {:1811}
{:1850}
{number:1850}
	on -(ac%<>ao%) gosub {:1634}:an$=an$+"":rs=1:a$=left$(an$,1):z$=left$(an$,2)
' &,52,20: is "expert mode" enabled?
' &,52, 5: is "pseudo-local" mode enabled?
	&,52,20,3:em=a%:&,52,5,3:zz=a%
	x=1:rq=.:rs=1
{:1860}
{number:1860}
' credit charge or password for using command
	f4=.:a%=zz:b%=2^ac%:&,42:if a% then ef$=b$:ep$=a$:ec=a%:ec%=b%:goto {:1800}
' 1861: log off
	if a$="O" then {:1690}
{number:1869}
	rs=.:return
{:1870}
{number:1870}
' fixes issue #15, "more prompt - messages only":
' 0=Off, 1=On, 2=Messages Only
' New Image Software:
'	a=1-a:an$=mid$("ffn",a*2+1,2):&"{f6}{pound}$b Mode: O{pound}v7{f6}":return ' 55 bytes
' X-Tec 2018/08/05:
'	a=1-a:a=abs(a):an$=mid$("ffn",a*2+1,2):&"{f6}{pound}$b Mode: O{pound}v7{f6}":return ' 62 bytes
' Pinacolada 2018/08/06:
	a=abs(1-a):&"{f6}{pound}$b Mode: O"+mid$("ffn",a*2+1,2)+"{f6}":return ' 54 bytes
{:1871}
{number:1871}
	a=val(mid$(uf$,b,1)):gosub {:1870}:uf$=left$(uf$,b-1)+chr$(a+48)+mid$(uf$,b+1)
	return
' TODO: subroutine getting item from uf$
{number:1880} ' XP - eXPert mode
	a=em:b$="Expert":gosub {:1870}:em=a:&,52,20,2:return
' 1881: PM - Prompt Mode
	a=pm:b$="Prompt":gosub {:1870}:pm=a:return
' 1882: MP - More Prompt
' closes issue #15
' properly set multi-value "Messages Only" prompt mode. load "im.params"
'	b=2:b$="{f5}More?{f5} Prompt":gosub {:1871}:&,52,34,a:return
	im=3:gosub {:2406}:&,52,34,a:return
' 1883: MN - Cursor Menu Mode
	b=3:b$="Menu":gosub {:1871}:&,52,44,a:return
' 1884: commented out (duplicate &,52,44), also Mnu lightbar related.  -36 bytes
' FIXME: Maybe &,52,44,a should be &,52,45,a (Are Menus Available on BBS?)
'	b=4:b$="Undefined":gosub {:1871}:&,52,44,a:return
{number:1885}
	poke 970,mp%:&"{f6}":return
{number:1890}
{:1890}
' R - Run a plus-file, X-Tec's mod asks for device/drive:
' 1008: prompt for device/drive
' 1470: gets drive #
'	poke 53252,14:&"{f6:2}Run: +.{pound}i0":b$=an$:on -(b$="") goto {:1812}:gosub {:1008}:gosub {:1470}
	poke 53252,14:&"{f6:2}Run: +.{pound}i0":b$=an$:if b$="" then {:1812}
{:1900}
{number:1900}
' update Area window, set cm$ for error logging
' Pinacolada's fix: remove redundant gosub {:1360}, shorten on-goto
	a$=b$:gosub {:1014}:on e%+1 goto {:3000}:goto {:1906}
' on 1-(e%=.) goto 1906,3000 ' 19 bytes
' on e%+1 goto 3000:goto 1906 '16 bytes
{:1901}
{number:1901}
' TODO: this would make the GOSUB target consistent, and you could set the default beforehand:
'	&"{f6}Are You Sure?: ":on a+1 gosub 1902,1907:return
	&"{f6}Are You Sure?: "
{:1902}
{number:1902}
	&"{lt. green}[{gray3}No{lt. green}]":gosub {:1007}:&"{pound}h4"
	a=-(a$="Y")
{:1904}
{number:1904}
	a$="No":if a then a$="Yes"
	&:&"{f6}{pound}q0":return
{:1906}
{number:1906}
	pr$="":&:goto {:1812}
{:1907}
{number:1907}
' Yes/No: defaults to Yes
	&"{lt. green}[{gray3}Yes{lt. green}]":gosub {:1007}:a=(a$="N")+1:&"{pound}h5":goto {:1904}
{:1908}
{number:1908}
' &,52,30,3: are main prompt macros enabled? (FIXME: seems superflous here...)
' also called from {:1100} gosub {:1908}
	poke 970,.:&,52,30,3:an$=d1$:&,15:b$=right$(an$,7)
	goto {:1915}
' instead of here... which the SY ECS command points to (forces a read):
	dr=3:a$="e.say":gosub {:1011}:on sgn(e%) goto {:1603}:x=1:gosub {:1001}:input# 2,x
	a=rnd(-ti):&"{f6}":x=int(rnd(1)*x)+2:gosub {:1001}
	input# 2,b$,c$,d$,f$:gosub {:2912}:lp=1:&"{pound}$q{white} {pound}$b{f6}{pound}$q{cyan} {pound}$c{f6}{pound}$q{yellow} {pound}$d{f6}{pound}$q{orange} {pound}$f{f6}{pound}q0":close 2:return
{:1914}
{number:1914}
	poke 53253,.:lp=.:poke 2024,.:poke 2031,.:poke 53260,.:& "{pound}u0{pound}q"+chr$(df%+48):return
{:1915}
{number:1915}
	&"{f6:2} - {pound}$bM":a%=tr%:if a%<100 then:&" - {pound}%a Min. Left"
	if zz then a%=usr(.):&"{f6} - Stack Free: {pound}%a"
	return
{:1920}
{number:1920}
	&"{f6} Aborted!{f6}":return
{:1930}
{number:1930}
' 30: are main prompt macros enabled?
'	&,52,30,3:on a%gosub {:1931}:return	' 20 bytes
	&,52,30,3:if a%=. then return		' 17 bytes
{:1931}
{number:1931}
	dr=3:a$="e.macros":gosub {:1011}
	if e%=.then:&,2,2:a=val(a$):&"{f6:2}":x=int(rnd(1)*a)+2:gosub {:1001}:&,3,2
	close 2:return
{:1978}
{number:1978}
	x=2
{:1980}
{number:1980}
	&"{f6}":dr=3:a$="e.text":gosub {:1011}:gosub {:1001}:&,2,2:&:close 2:&"{f6}":return
{number:1982}
' directory capacity full?
'	b$="Disk Directory"
	b$="Directory Entry"
{:1985}
{number:1985}
	&"{f6}Sorry, {pound}$b Limit Exceeded.{f6}":return
{:1989}
{number:1989}
	&"{f6:2}Unknown Command. Enter {f5}?{f5} For Help.":return
{:1990}
{number:1990}
' BBS node identifiers
	ni=val(an$):n1$=cc$+mid$(str$(ni),2):b$="-"+n1$:n2$=""
	if left$(an$,1)="!" then ni=-1:n1$=mid$(an$,2,3):b$=" @ "+n1$
' &,15,6,94=^
	an$=mid$(an$,5):&,15,6,94:if an$<>""and ni=-1 then n2$=an$:b$=b$+"/"+n2$
	an$=a$:n0$=a$:&,15,1:an$=an$+b$:return
{:1995}
{number:1995}
	x=6:goto {:1980}
{number:2000}
	poke 22,25:for i=2 to peek(152):close peek(603):next:poke 2031,.
{number:2002}
	x=peek(780):y=peek(781)+peek(782)*256
{number:2004}
	&,11:&,28,1:poke 53248,.
{number:2006}
	dr$=mid$(str$(dr%(5)),2)+":":dv%=dv%(5):load dr$+"im",dv%,2
{:2100}
{number:2100}
	&,28,1:gosub {:2110}:&,27:return
{number:2102}
	goto {:2110}
{number:2104}
' display SB/UD/UX/GF drive info? called from +.t
	im=4:goto {:2426}
' display file transfer info:
	im=5:goto {:2426}
{:2110}
{number:2110}
	dim bb$(31),dt$(61),ed$(61),nn$(61)
	dim a%(61),c%(61),d%(61),e%(31),f%(61),ac%(31),so%(31):return
{:2400}
{number:2400}
	a$="misc":goto {:2500}
{:2401}
{number:2401}
	a$="misc2":goto {:2500}
{:2402}
{number:2402}
	a$="editor":goto {:2500}
{:2403}
{number:2403}
	a$="nodes":goto {:2500}
{:2404}
{number:2404}
	a$="local":goto {:2500}
{:2406}
{number:2406}
	a$="params":goto {:2500}
{:2408}
{number:2408}
	a$="comm1":goto {:2500}
{:2410}
{number:2410}
	a$="comm2":goto {:2500}
{:2412}
{number:2412}
	a$="stats":goto {:2500}
{:2414}
{number:2414}
	a$="bar":goto {:2500}
' TODO: remove this and im.screens, nothing references it
'{number:2418}
'	a$="screens":goto {:2500}
{:2422}
{number:2422}
	a$="feedback":goto {:2500}
{number:2424}
	a$="trans":goto {:2500}
{:2426}
{number:2426}
	a$="disp":goto {:2500}
{:2428}
{number:2428}
	a$="info":goto {:2500}
{:2430}
{number:2430}
	a$="menus":goto {:2500}
{:2500}
{number:2500}
	gosub {:2510}:is=is+1:im$(is)=im$
{number:2502}
	gosub 60000:new 60000:is=is-1:if is then a$=im$(is):gosub {:2510}
{number:2504}
	return
{:2510}
{number:2510}
' FIXME 6/17/2019: experimental conditional load, can cause error in 2502
'	if a$<>im$ then dr=5:gosub {:1009}:im$=a$:a$=dr$+"im."+im$:load a$,dv%
	dr=5:gosub {:1009}:im$=a$:a$=dr$+"im."+im$:load a$,dv%
{number:2512}
	return
{number:2600}
' load "+/XX.yyy..." (XX=module name [pr$], yyy...=sub-module name [a$])
	gosub {:2610}:gosub 4000:new 4000:return
{:2610}
{number:2610}
	lm$=left$(pr$,2)+"."+a$:dr=5:gosub {:1010}:a$=dr$+"+/"+lm$:load a$,dv%:return
{:2620}
{number:2620}
	gosub {:2630}:gosub 4000:new 4000:return
{:2630}
{number:2630}
' load module in a$, minus "+/" prefix:
	lm$=a$+"":dr=5:gosub {:1010}:a$=dr$+"+/"+lm$:load a$,dv%:return
{number:2900}
{:2900} ' MM - memory usage
	a=45:b=43:a$="{f6}Program":gosub {:2910}
{number:2901}
	a=47:b=45:a$="Variables":gosub {:2910}
{number:2902}
	a=49:b=47:a$="Arrays":gosub {:2910}
{number:2903}
	a=51:b=49:a$="Free RAM":gosub {:2910}
{number:2904}
	a=55:b=51:a$="Strings":goto {:2910}
{number:2905}
	poke 53252,16:&"{f6}Load: {pound}i0{f6}":if an$="" then return
{number:2906}
	dr=5:gosub {:1010}:a$=dr$+an$:load a$,dv%:goto {:2900}
{number:2910}
{:2910}
	c=peek(a)-peek(b)+(peek(a+1)-peek(b+1))*256:&"{pound}$a:{pound}{back arrow}10{pound}!c{f6}":return
{number:2912}
{:2912}
' used by SY to center the quotation, +.lo "Good Afternoon, Pinacolada!"
' 61 bytes:
'	q$="":on-(ll%<42)goto {:1603}:for r=1 to int((ll%-42)/2):q$=q$+" ":next:return
' 57 bytes:
	q$="":if ll%>42 then for r=1 to int((ll%-42)/2):q$=q$+" ":next
	return

{number:2999}
{crunch:off}
	copr. 1994 new image 9/21/94
{crunch:on}

{number:3000}
' setup
{:3000}
{step:2}
	poke 828,peek(186):clr:print"{clear}{altdis}{white}{lower}":poke 53280,.:poke 53281,.
	open 131,2,134,chr$(6):poke 248,203:poke 250,204:poke 56,160:poke 52,160
	dim a$,a%,ac%,am,ag$,ak$,am$,an$,ao%
	dim b$,b%,bd,bn$,bu
	dim c$,c%,c1$,c2$,c3$,ca,cc,cc$,cd%,ch$,cm$,cn,co$,co%,cr,ct,ct%
	dim d$,d%,d1$,d1%,d2$,d2%,d3%,d3$,d4$,d5$,d6$,da%,db%,dc,dc%,dd$,dr,dr$,dv%
	dim df%
	dim e$,e%,el,em,ef$,ep$,ec,ec%
	dim f$,f%,f1,f2,f3,f4,ff$,fl,fl$,f1$,f2$,f3$,f4$,f5$,f6$,f7$,f8$
	dim g$,g%
	dim h$,h%,hx$
	dim i$,i%,id,im$,im,is
	dim j$,j%,jn$
	dim k$,k%,kk,kp%
	dim l$,l%,l1,l1$,l2,l2$,l3,l3$,lc,ld$,le,lf,lk%,ll$,ll%,lm$,lp,lt$
	dim m$,m%,mc,mf,ml$,mp$,mt$,mw,mp%,mn%
	dim n$,n%,na$,nc,nf,nl,nl$,nm,nm$
	dim o$,o%
	dim p$,p%,p1%,p2%,p3%,pf,ph$,pl,pm,po$,pp$,pr,pr$,ps,pw$
	dim q$,q%,qb,qe,qt$
	dim r$,r%,rc,rn$,rp,rq
	dim s$,s%,sa%,sh,sg
	dim t$,t%,t1,tc%,tf,tk$,tr%,tt,tt$,tz$
	dim u$,u%,uc,uh,ul,ur,uf$,uu$
	dim v$,v%
	dim w$,w%
	dim x$,x%
	dim y$,y%
	dim z$,z%,zz
	ac%=16:x=rnd(-ti):hx$="0123456789ABCDEF"+""
	c3$="{f6}Returning To The Editor"+"{f6:2}"
	ak$=" {$c0:39}"+"{f6}"
	r$=chr$(13):nl$=chr$(.):qt$=chr$(34)
	open 4,4,7:poke 836,1:poke 650,128
	poke 56328,.:poke 56579,peek(56579)or 38:poke 56577,peek(56577)or 36
	dim tt$(254),dv%(36),dr%(36),co$(9),hs$(10),bf(6),st(38),im$(5),pf$(10)
	dim ec%(19,24),es%(3,49),ei%(50):restore:for i=1 to 9:read a$:co$(i)=a$+"":next
' &,53: logoff (don't know why this is called, init rs232 stuff?)
	dv%=peek(828):z%=dv%:dr$="0"+":":bd$=dr$:sr=2:pr=-1:f3=1:sys 49155:&,53

' FIXME: Long date string is 2019, but better yet would be fix ML to do so
' >C:16e0  d4 55 45 20  cf 43 54 20  32 33 2c 20  32 30 31 38   Tue Oct 23, 2018
	poke $16ec,$32:poke $16ed,$30:poke $16ee,$31:poke $16ef,$39
' For a brand new BBS that hasn't got a clock set method yet, set clock to IM revision date
' 1336: gosub 1338:display IM revision (omit time zone):return
' 1338: define an$
	gosub {:1336}:d1$=an$ ' for x=1 to 11:poke $cdff+x,asc(mid$(an$,x,1)):next
	a$="NTSC":if peek(678) then a$="PAL"
' 24	&"{pound}$a System Detected.{f6}"
	&:&" System Detected.{f6}"
{:3080}
	close 15:open 15,dv%,15:&,18,.:poke 53248,1:am$=d1$

{ifdef:swiftlink}
' TODO: experimental, fix this
' to init SwiftLink, use &,16,1
	gosub {:sub.init_rs232_interface}
{else}
	&"Loading User Port RS232 Driver...":a$=dr$+"ml.rs232":&,7,dv%,2:&,16,.
{endif}

{:3088}
	dv%=z%:&"{f6}{cyan}Reading Config Data...":close 2:close 15:open 15,dv%,15
	fl=.:open 2,dv%,2,bd$+"bd.data,s,r":gosub {:1012}:if e% then close 2:gosub {:3194}:goto{:3088}
	input# 2,dv%(3),dr%(3),po$:close 2:restore:if po$="" then po$="Main: "
{:3094}
	read a$:if a$<>"*" then {:3094}
	gosub {:1196}:gosub {:1063}:for i=1 to 6:x=i+51:gosub {:1001}:&,2,2:dv%(i)=val(a$)
	&,2,2:dr%(i)=val(a$):next:close 2
{:3100}
	&"{f6}Reading System Info..."
	gosub {:1065}:if e% then close 2:gosub {:3194}:goto {:3100}
	x=1:gosub {:1001}:&,2,2:bs$=a$:close 2
' fixes issue #5 (User count is set to 141 when new BBS configured)
	gosub {:1045}:uh=a%:&"{pound}%a "+left$("Users",4-(a%<>1))+"{f6}"
	dr=3:gosub {:1010}
	&"{f6}ECS Definitions":a$=dr$+"e.ecs.main":&,42,4:gosub {:sub.status}
	&"Print Mode Definitions":a$=dr$+"e.printmodes":&,7,dv%,7:gosub {:sub.status}
	&"Lightbar Defaults":a$=dr$+"e.lightbar":&,7,dv%,8:gosub {:sub.status}

' FIXME: also not ready:
' The idea is to prevent "?load error" crashes if file not found
	&"Alarm Table":a$=dr$+"e.alarms":&,7,dv%,9:gosub {:sub.status}
'	f$="e.alarms":gosub {:sub.check_for_file}:if e%=62 then {:nm_times}
' a$ gets overwritten by DOS status

{:nm_times}
' TODO: check if "nm.config" exists first?
' check for presence of "nm.times": if not present, don't crash with ?load error
' FIXME: larry said this caused his bbs to not run network transfers :(
' new
'	dr=2:gosub {:1009}:f$="nm.times":gosub {:sub.check_for_file}:if e%=62 then {:fkeys}
' old
	dr=2:gosub {:1009}:&"Network Alarm Table":a$=dr$+"nm.times":&,7,dv%,12:gosub {:sub.status}

{:fkeys}
' f-key functionality is broken, so making this file optional
	dr=3:gosub {:1009}:f$="e.fkeys":gosub {:sub.check_for_file}:if e%=62 then {:3132}
' a$ gets overwritten by DOS status
	&"Function Keys":a$=dr$+f$:gosub {:1011}:for i=1 to 8:&,2,2
{number:3127}
	if right$(a$,1)="{back arrow}" then a$=left$(a$,len(a$)-1)+r$
{number:3128}
	tt$(i)=a$:next:f1$=tt$(1):f2$=tt$(2):f3$=tt$(3):f4$=tt$(4)
	f5$=tt$(5):f6$=tt$(6):f7$=tt$(7):f8$=tt$(8):gosub {:sub.done}
' 3132
{:3132}
	close 2:gosub {:1063}:if e% then close 2:gosub {:3194}:goto {:3132}
	x=1:gosub {:1001}:&,2,2:ca=val(a$):x=12:gosub {:1001}:&,2,2:ur=val(a$)-1
	x=17:gosub {:1001}:&,2,2:d3$=a$:x=18:gosub {:1001}:&,2,2:pp$=a$
	x=19:gosub {:1001}:&,2,2:z$=a$:x=20:gosub {:1001}:input# 2,p1%,p2%,p3%
' record 33: clock set method, external cmd device (if any)
' record 34: external CMD device
	x=33:gosub {:1001}:&,2,2:y%=val(a$):x=34:gosub {:1001}:&,2,2:y1%=val(a$)
' record 35: last automaint date
' record 36: macro count
	x=35:gosub {:1001}:&,2,2:am$=a$:an$=a$:&,15:d6$=an$+"M":x=36:gosub {:1001}:&,2,2:mc=val(a$)
' record 38: lt. kernal device #
	x=38:gosub {:1001}:&,2,2:lk%=val(a$)
' record 40: default prompt color
	df%=3:x=40:gosub {:1001}:&,2,2:a=val(a$):if a>. and a<16 then df%=a
' record 41: printer secondary address (device, channel, sa=7, upper/lowercase)
	x=41:gosub {:1001}:&,2,2:a=val(a$):if a then close 4:open 4,4,a
' record 42: printer linefeeds (10=yes, 0=no)
	x=42:gosub {:1001}:&,2,2:a=val(a$):if a then poke 17136,a
' record 45: BBS time zone
	x=45:gosub {:1001}:&,2,2:tz$=a$
' record 47: BBS name
	x=47:gosub {:1001}:&,2,2:bn$=a$
' record 48: Entering chat message
' record 49: Exiting chat message
	x=48:gosub {:1001}:&,2,2:c1$="{clear}{f6}{$07}"+a$+"{f6:2}":x=49:gosub {:1001}:&,2,2:c2$="{f6:2}"+a$+"{f6:2}"
' record 51: BBS identifier (e.g., WN)
	x=51:gosub {:1001}:&,2,2:cc$=a$
' record 58: Credits for new user
	x=58:gosub {:1001}:&,2,2:nc=val(a$)
' 3160
' y%: 1=cmd clock, 2=ltk clock, 3=last system timestamp, 4=external cmd device
' gosub {:3170} - set clock
	&"Setting Clock...":on y% gosub {:3354},{:3364},{:3368},{:3372}:gosub {:3174}:poke 1010,1:&"{f6}"
' im=5...: load im.info, set BBS time zone
	poke 970,.:poke 971,23:mp$=" ...More? (Y/n) "+"":im=5:gosub {:2428}:gosub {:3202}
	gosub {:1060}:for x=1 to 38:gosub {:1001}:&,2,2:st(x)=val(a$):next:close 2
' FIXME: what is tk$?
	an$=am$:lt$=am$:tk$=left$(am$,1):gosub {:3212}
	close 2:gosub {:3188}:&,37:poke 53258,16-(peek(56577) and 16)
	a$=z$:gosub {:1520}:t1=a:an$=z$:&,15:d2$=an$+"M":for i=54272 to i+24:poke i,.:next
	f1=3:&,27,1:a$="lo":goto {:1016}
{:3174}
	a=val(left$(z$,1)):gosub {:3186}:poke 52935,a
	a=val(mid$(z$,2,2)):gosub {:3186}:poke 52938,a
	a=val(mid$(z$,4,2)):gosub {:3186}:poke 52936,a
	a=val(mid$(z$,6,2)):gosub {:3186}:poke 52937,a
	b=val(mid$(z$,8,2)):c=val(mid$(z$,10,2))
	&,62,b,c:b=b+80*((b=92)-(b=12))+12*((b=93)or(b=13)):&,58,b,.:return
{:3186}
	a=16*int(a/10)+a-int(a/10)*10:return
{:3188}
	for q=.to 6:bf(q)=-1:next
	&"{f6}Reading Blocks Free...{f6}":for q=1 to 6:dr=q:gosub {:1079}
{:3192}
	read b$:&"{f6}{rvrs off} {pound}$b Disk:{pound}{back arrow}30{pound}!a":next:q=.:return
{:3194}
	&"{f6:3}{yellow}Insert All System Disks In Correct      Drives, And Press {rvrs on} RETURN {rvrs off}"
	&" Or, {f6:2}Press (1) To Configure A New Board"
	&"  Or, {f6}Press (2) To Convert From 1.2/1.2a{f6:2}[> ":gosub {:1007}
	&"{f6:2}":on-(an$="1")-(an$="2")*2 goto{:3222},{:3376}:return
{:3202}
	dr=3:a$="e.lightdefs,s,r":gosub {:1011}:if e% then close 2:goto {:3212}
	&"Setting default checks..."
	for x=. to 7:&,2,2:if len(a$)<>16 then {:3210}
	for i=1 TO 16:b$=mid$(a$,i,1):&,52,(x)*16+i-1,val(b$):next
{:3210}
	next:close 2:gosub {:sub.status}
{:3212}
	a$="e.log"+left$(lt$,1):gosub {:1011}:if e%=. then return
	dr=3:a$="e.log"+left$(lt$,1):gosub {:1023}:an$=d1$:&,15:d6$=an$
	a$=" LOG START: "+d6$:print# 2,a$:gosub {:1096}
	a$=" {pound}q0{yellow}{pound}o{$c0}{pound}o{$c0}"+"{f6}":print# 2,a$:gosub {:1096}:gosub {:1063}:x=44:gosub {:1001}:print# 2,d6$
	close 2:gosub {:1060}:for x=12 to 22:st(x)=.:gosub {:1026}:next:st(20)=.:goto {:1026}

' configure new BBS:
{:3222}
' TODO: configure new BBS:
' Current process has some deficiencies:
' Mess up an answer, there's no way to go back and correct it without rebooting
' 	(Mention in new version "You can change answers later.")
' IM menu system could be used to answer these questions

' Hardware:
' TODO: Using Lt.Kernal device?
' TODO: Configure modem/telnet bridge options (nimodem.dat)
' TODO: Dallas Semiconductor DS12C887 RTC chip at $d500

' Sysop config:
' TODO: Graphic Menu mode available, enabled? lightbar options
' TODO: Ask which style of menus: text or graphic menu
' TODO: Email vs. phone # mod of X-Tec's is something to consider, too
' TODO: Configure BBS time zone
' TODO: Configure Prime Time
' TODO: Add user #1 to QuickList (instant mode login)

' may need to rename +/IM.* to im.* and renumber to 60000-, use im variable to select menu options
'	in step-by-step config walkthrough

	&"{clear}{f6}{white} Part I: Sysop Information{f6:2}"
	poke 53252,20:w$="IMAGE BBS":b$=w$:pl=1:p$="Sysop Handle":&,1,32
	if an$="" then an$=b$
	tt$(1)=an$:&"{f6}":w$="JOHN":b$=w$:p$="Sysop First Name":&,1,32
	if an$="" then an$=b$
	tt$(3)=an$:&"{f6}":w$="DOE":b$=w$:p$="Sysop Last Name":&,1,32
	if an$="" then an$=b$
' TODO: if using X-Tec's email address mod, use "noreply@example.com"
' https://tools.ietf.org/html/rfc2606
	tt$(4)=an$:&"{f6}":w$="[801] 423-2209":b$=w$:p$="Sysop Phone":&,1,32
	if an$="" then an$=b$
	tt$(5)=an$:&"{f6}":w$="DITTO":b$=w$:p$="Sysop Password":&,1,32
	if an$="" then an$=b$
' fields 1-6
	tt$(2)=an$:tt$=tt$(1)+r$+tt$(2)+r$+tt$(3)+r$+tt$(4)+r$+tt$(5)+r$+d1$+r$

' TODO: research what this extra stuff is
' original:
' 7=?, 8=calls today, 9=total calls,
	tt$=tt$+"9"+r$:for i=1 to 14:tt$=tt$+"0"+r$:next:tt$=tt$+d1$+r$
' new:
	tt$=tt$+"9"+r$+"0"+r$+"0"+r$+"1"+r$+"5928"+r$
	for i=1 to 10:tt$=tt$+"0"+r$:next:tt$=tt$+d1$+r$
' TODO: sync up field #s (old: 1-14 -> 8-21, new: 1-10 -> 12-22)
' original
'	tt$=tt$+"14111911111111190000"+r$
' new
'	tt$=tt$+"1411191111111119000090000"

	&"{clear}{f6} Part II: Device, Drive Configuration{f6:2}":restore:gosub {:sub.clock_method}
{:3252}
	a=.:read a$:if a$<>"*" then {:3252}
	for i=1 to 6:poke 53252,3:pl=1:read b$
	w$="8":p$=b$+" Device (7-15)":&,1,32:a=val(an$):if a<7 or a>15 then a=8
	dv%(i)=a:w$="0":p$=b$+" Drive (0-254)":&,1,32:a=val(an$):if a<. or a>254 then a=.
	dr%(i)=a:&"{f6}":next

	&"{clear}{f6} Part III: BBS Information{f6:2}":poke 53252,30:pl=.
	w$="IMAGE BBS V1.3!":b$=w$:p$="BBS Name":&"{f6}":&,1,32
	if an$="" then an$=b$
	bn$=an$:w$="IMAGE MAIN":b$=w$:p$="Main Prompt":&"{f6}":&,1,32
	if an$="" then an$=b$
	po$=an$:w$="* Entering Chat Mode *":b$=w$:p$="Chat Entry":&"{f6}":&,1,32
	if an$="" then an$=b$
	c1$=an$:w$="* Exiting Chat Mode *":b$=w$:p$="Chat Exit":&"{f6}":&,1,32
	if an$="" then an$=b$
	c2$=an$:w$="100":b$=w$:p$="New User Credits":&"{f6}":&,1,32:if an$="" then an$=b$
	nc=val(an$):&"{f6}Creating {f5}bd.data{f5}...."
	a$=bd$+"bd.data,s,w":open 2,dv%,2,a$:print# 2,dv%(3);r$;dr%(3):print# 2,po$
' TODO: writing this string could be subroutined:
	print# 2,"1.3 Image v1.3 Copyright 1994 New Image Software":close 2:close 15
	gosub {:sub.done}:&"{f6}Creating {f5}u.config{f5}...."
	dr=6:a$="u.config,l,"+chr$(254):gosub {:1011}
' FIXME: ur=1: is this wrong? should it be 2?
	x=1:gosub {:1001}:print# 2,tt$:x=2:gosub {:1001}:print# 2,"{up arrow}":ur=1:close 2:gosub {:sub.done}
' insert user #1 into u.index:
' closes issue #5 (User count is set to 141 when new BBS configured)
' al's method (sets to 141), would use 1023 instead of s0:, but that is only for seq files:
'	&"{f6}Creating {f5}u.index{f5}....":an$=tt$(1):gosub {:1038}:close 2:&"Done!{f6}"
' jack's method (tested, correctly sets to 1):
	&"{f6}Creating {f5}u.index{f5}...":dr=6:gosub {:1010}:a$=dr$+"u.index":print# 15,"s"a$
' insert user #1 into u.index, create a struct:
	a%(0)=1:a%(1)=1:&,60,3,0,a%(0),4,a$,dv%:close 15:gosub {:sub.done}
	&"{f6}Creating {f5}e.stats{f5}..."
	dr=3:a$="e.stats,l,"+chr$(10):gosub {:1011}
	for x=1 to 40:gosub {:1001}:print# 2,"0":next:close 2:gosub {:sub.done}
' added ur=2 and more rel positioning (which 2.0's i.su/config does)
	&"{f6}Creating {f5}e.data{f5}...":ur=2
	dr=3:a$="e.data,l,"+chr$(31):gosub {:1011}:x=1:gosub {:1001}:print# 2,"0"
' "ur" was hard-coded "2":
	for x=2 to 11:gosub {:1001}:print# 2,"{up arrow}":next:x=12:gosub {:1001}:print# 2,ur
	for x=13 to 16:gosub {:1001}:print# 2,"{up arrow}":next:x=17:gosub {:1001}:print# 2,"NOBODY"
' TODO: Investigate whether record #18 a system reservation password?
	x=18:gosub {:1001}:print# 2,"PASS":x=19:gosub {:1001}:print# 2,d1$
	x=20:gosub {:1001}:print# 2," 0 , 0 , 0":for x=21 to 30:gosub {:1001}:print# 2,"{up arrow}":next
' 31: next available user account
' 32: empty record, is it ever accessed?
	x=31:gosub {:1001}:print# 2,ur:x=32:gosub {:1001}:print# 2,"{up arrow}"
' 33: Clock set device type
' 34: External CMD device
	x=33:gosub {:1001}:print# 2,y%:x=34:gosub {:1001}:print# 2,y1%
' 35: date/time of last log reset
' 36: macro count
' 37: BBS reservation mode/password
	x=35:gosub {:1001}:print# 2,d1$:x=36:gosub {:1001}:print# 2,"0":x=37:gosub {:1001}:print# 2,"0,{up arrow}"
' 38: Lt.Kernal device number
	x=38:gosub {:1001}:print# 2,"0":for x=39 to 42:gosub {:1001}:print# 2,"{up arrow}":next
' 43: password mask character(s)
	x=43:gosub {:1001}:print# 2,"X":for x=44 to 46:gosub {:1001}:print# 2,"{up arrow}":next
' 47: BBS name
' 48: Entering Chat message
	x=47:gosub {:1001}:print# 2,bn$:x=48:gosub {:1001}:print# 2,c1$
' 49: Exiting Chat message
' record #50 is netsub response count, therefore don't overwrite it
	x=49:gosub {:1001}:print# 2,c2$:x=50:gosub {:1001}:b$="0":&,2,2
	if asc(a$+nl$)<>32 then b$=a$
' 51: BBS identifier (e.g., WN)
	gosub {:1001}:print# 2,b$:x=51:gosub {:1001}:print# 2,cc$
' 52-57: device/drive #s
	for i=1 to 6:x=51+i:gosub {:1001}:print# 2,dv%(i);r$;dr%(i):next
' 58: new user credits
	x=58:gosub {:1001}:print# 2,nc:close 2:gosub {:sub.done}

	&"{f6}Creating {f5}e.access{f5}...":dr=3:a$="e.access,l,"+chr$(127):gosub {:1011}
	for i=. to 8:x=i+1:gosub {:1001}
' CHANGE: sysop submitted, flag 5 (U/D access) from 1 to 0
	print# 2,"Group"+str$(i)+r$+"01001100000000021151":next
' add full access flags/unlimited everything for sysop:
' (which jack's i.su/config does)
	x=10:gosub {:1001}:print# 2,"Group 9"+r$+"11111111111111190000"

' sysop submitted change: change flag 2 (credit ratio) to 4:1 & flag 6 (max editor lines for a non-console user) to 9(0)
'	x=10:gosub {:1001}:print# 2,"Group 9"+r$+"14111911111111190000"

	close 2:gosub {:sub.done}:&"{f6}Starting Daily Log...":gosub {:3212}:gosub {:sub.done}

' My version (move to an external file):
' ----+----+----+----+----+----+----+----39
' To complete the configuration of your
' new Image BBS, follow these steps:
' If necessary, move the white portion of
' the "lightbar" to Loc. (F3 moves left,
' F5 moves right.)
' F7 selects the function on the left; in
' this case, you log in to your BBS from
' "local mode."
' Once you are at the main prompt, you
' can enter several editors:

' IM: Main prompt messages (macros)
'     Commands users and sysops can use
'     Set up payroll for users helping out
'     Define lightbar functions, alarms
'     Configure your modem/telnet bridge
'             ...and a lot more.

' RE: Edit message bases and file transfer
'     areas. Define access levels, user
'     permissions, put directories into a
'     special interest group, and more.

' Jack's:
' Be sure to enter "IM" once online to
' complete the setup/configuration of
' your BBS. Message bases, U/D and U/X
' libraries can be configured by using
' the "RE" command from the main prompt.

'                    - New Image Software

'	&"{f6:2}Be sure to enter {f5}IM{f5} once online to{f6}complete the setup/configuration of{f6}"
'	&"your {$c2:2}S. Message bases, U/D and U/X{f6}libraries can be configured by using{f6}"
'	&"the {f5}RE{f5} command from the main prompt.{f6:2}{pound}{back arrow}18New Image Software{f6}":lp=1:return

' Al's version:
' Be sure to enter "IM" once online to complete the setup of your new BBS.
' Message bases and U/D libraries are configured with the +.reledit utility ("RE" command).
' - New Image Software
'	lp=1:&"{f6}Be sure to enter {f5}IM{f5} once online to complete the setup of your new {$c2:2}S."
'	lp=1:&"Message bases and U/D libraries are configured with the "
'	lp=1:&"{f5}+.reledit{f5} utility ({f5}RE{f5} command).{f6:2}- New Image Software{f6:2}":return

	lp=1:&"{f6:2}Be sure to enter {f5}IM{f5} once online to complete the setup of your "
	lp=1:&"BBS. Message base, U/D and U/X libraries can be configured with "
	lp=1:&"the {f5}RE{f5} command from the main prompt.{f6:2}{pound}{back arrow}18New Image Software{f6}":return

{:3354}
' get time from creative micro designs device's real-time clock:
	close 15:open 15,dv%,15:print# 15,"t-ra":&,2,15:close 15

{:3356}
	z$=left$(a$,2):a=-(z$="su")-2*(z$="mo")-3*(z$="tu")-4*(z$="we")-5*(z$="th")
	a=a-6*(z$="fr")-7*(z$="sa"):z$=mid$(str$(a),2,1)+mid$(a$,12,2)+mid$(a$,6,2)
	a=-80*(mid$(a$,24,1)="p")+val(mid$(a$,15,2))
' 3364:
	z$=z$+mid$(a$,9,2)+right$("0"+mid$(str$(a),2),2)+mid$(a$,18,2):goto {:set_time_flag}

{:3364}
' get time from Lt.Kernal clock:
' partial duplicate of 3366
	dr=5:gosub {:1010}:a$=dr$+"swr.ml":&,7,dv%,2:sys 49155
{:3362}
	z$="":for a=49159 to 49169:z$=z$+chr$(peek(a)):next:goto {:set_time_flag}

{:3368}
' get time from last system timestamp:
' disk input was already done in 3140, copy am$
	z$=am$
{:set_time_flag}
	poke 1010,1:return
{:3372}
' get time from cmd clock (15 bytes) "mon. xx/xx/xx"+cr?
	close 15:open 15,y%,15:print# 15,"t-ra":&,2,15:close 15:goto {:3356}
{:3376}
'	rem:close15:open15,dv%,15,"r"+bd$+"d.data=bd.data":close 15
	rem convert from 1.2(a)
	fl=.:&"{f6:2}Reading {f5}d.data{f5}...":close 2:open 2,dv%,2,bd$+"d.data,s,r":gosub {:1012}
	if e% then close 2:&"{f6:2}{f5}d.data{f5} not found!! [CONFIGURE] (Key) {pound}g1":return
	for i=1 to 6:input# 2,dv%(i),dr%(i):next
	&,2,2:cc$=a$:&,2,2:nc=val(a$):&,2,2:&,2,2:&,2,2:bn$=a$:&,2,2:po$=a$:close 2
	&"{f6:2}":gosub {:sub.clock_method}:&"{f6:2}Converting...":for qq=1 to 4:gosub {:3388}:next:return
{:3388}
	on qq goto {:3390},{:3414},{:3426},{:3434}
{:3390}
	&"{f6}Converting Access Data...":gosub {:1063}
	for x=2 to 11:gosub {:1001}:&,2,2:tt$(x)=a$:next
	for x=21 to 30:gosub {:1001}:&,2,2:tt$(x)=a$:next
	for i=.to 9:a$=tt$(i+2):tt$(i+2)=mid$(a$,5)
	a=asc(a$):b=asc(mid$(a$,2,1)):c=asc(mid$(a$,3,1)):d=asc(mid$(a$,4,1))
	if a>100 then a=.
	if b>100 then b=.
	if c>100 then c=.
	if d>100 then d=.
	tt$(i+21)=tt$(i+21)+chr$(48+c)+chr$(48+b)+right$(str$(100+a),2)+chr$(48+d)
	next:close 2
	for i=.to 9:fl$(i)=tt$(i+21):next:&"{f6}Continuing!{f6}":return
{:3414}
' 32=empty record
	&"Updating {f5}e.data{f5}...":gosub {:1063}:x=32:gosub {:1001}:print# 2,"{up arrow}"
	x=33:gosub {:1001}:print# 2,y%:x=34:gosub {:1001}:print# 2,y1%
	x=35:gosub {:1001}:print# 2,d1$:print# 2,.
	print# 2,.:print# 2,.:print# 2,"3"
	print# 2,"7":x=47:gosub {:1001}:print# 2,bn$:print# 2,"* Entering Chat Mode *"
	print# 2,"* Exiting Chat Mode *":x=51:gosub {:1001}:print# 2,cc$
	for i=1 to 6:x=51+i:gosub {:1001}:print# 2,dv%(i);r$;dr%(i):next
	x=58:gosub {:1001}:print# 2,nc:close 2:&"{f6}Continuing!{f6}":return
{:3426}
	&"Creating {f5}e.access{f5}..."
	close 2:dr=3:a$="e.access,l,"+chr$(127):gosub {:1011}
	for i=. to 9:x=i+1:gosub {:1001}
	print# 2,tt$(x+1)+r$+tt$(x+20):next
	x=10:gosub {:1001}:print# 2,tt$(x+1)+r$+"14111911111111190000":close 2
	&"{f6}Done With {f5}e.data{f5}{f6}":return
{:3434}
	&"Writing new {f5}bd.data{f5}{f6}"
	open 2,dv%,2,bd$+"bd.data,s,w":gosub {:1012}:if e%then close 2:gosub {:3192}:goto {:3080}
	if po$="" then po$="Main: "
	print# 2,dv%(3);r$;dr%(3):print# 2,po$
' TODO: subroutine this string
	print# 2,"1.3 Image v1.3 Copyright 1994 New Image Software":close 2:close 15
	&"{f6}Conversion Complete!":return

{:sub.clock_method}
' Set Clock From:
'
' 1. CMD boot device
' 2. Lt.Kernal
' 3. Last system timestamp
' 4. CMD external device
'
' [> _
{:3446}
	&"Set Clock From:{f6:2} 1. CMD boot device{f6} 2. Lt.Kernal{f6}"
	&" 3. Last system timestamp{f6} 4. CMD external device{f6:2}"
{:3448}
	&"[> ":gosub {:1007}:y%=int(val(an$)):if y%<1 or y%>4 then:&"{up}":goto {:3448}
{:3449}
' TEST: mention range, offer escape
	if y%=4 then:&"CMD external device # (8-29): {pound}i1":y1%=int(val(an$))
	if y%=4 then if y1%<8 OR y1%>29 then:&"{f6}":goto {:3446}
	return

{:3454}
{:sub.done}
'	&"{pound}{back arrow}33Done.{f6}":return
	b$="Done.":goto {:status.2}
' 3456
{:sub.status}
' "OK.", "Error!"
	gosub {:1012}:b$="{lt. green}OK.":if e% then b$="{lt. red}Error!{f6}{white}{pound}{back arrow}05{pound}$a"
{:status.2}
	&"{pound}{back arrow}33{pound}$b{pound}q0{f6}":return

{:sub.check_for_file}
' check for file f$: returns 62=file not found, 63=file exists
	gosub {:1010}:print# 15,"r"+dr$+f$+"="+f$:goto {:1012}

{nice:10}
	data"Commodore 64","Commodore 128","Amiga","Apple/Comp."
	data"IBM/Comp.","Macintosh","Atari/ST","Tandy Series","Other Type"
	data"*","System","E-Mail","Etcetera","Directory","Plus-File","User"

{ifdef:swiftlink}
' experimental
{nice:10}
{:sub.init_rs232_interface}
' user port: &,16,0
' SwiftLink: &,16,1
	dr=3:a$="e.i.modem":gosub 1011:if e% then &"Defaulting to ":x=.:goto {:init}
{:4020}
	x=1:gosub 1001:&,2,2:mt$=a$:x=val(mid$(mt$,11,1)
'	:&,2,2:in$=a$:&,2,2:m$=a$:&,2,2:au$=a$
{:init}
	close 2:if x<>1 then x=.
' Initializing SwiftLink ML...
	&"{f6}Initializing "
{:init}
	&mid$("user portSwiftLink",(x+1)*9-8,9)+" ML..."
	a$=dr$+"ml.rs232":&,7,dv%,2:&,16,x:return
{endif}

{crunch:off}
	copr. 1994 new image 9/21/94
{crunch:on}

{number:4000}
{:4000}
	&,38:el=y:cm$=cm$+"":p$=p$+"":pr$=pr$+"":im$=im$+"":if x<128 then {:4006}
	a$="FATAL ERROR!!":gosub {:1096}:sys 64789:print"{clear}{altdis}{white}{lower}{down:2}"a$:end
	&,38:&,61,.,8:print"&,37:goto 1812:":end
{:4006}
{number:4006}
	restore
{:4008}
{number:4008}
	read a$:if a$<>"errors" then {:4008}
	&,40:d$="GURU":if x>. and x<30 then for k=1 to x:read d$:next
	a%=x:&"{f6}{lt. red} SYSTEM ERROR #{pound}%a {white}({pound}$d ERROR){f6}":r$=chr$(13)
	a$="im":if el=>3000 then a$="+."+pr$:if el=>60000 then a$="im."+im$
	a=el:&"{lt. blue} In Line:{gray3}{pound}!a {lt. blue}Of {gray3}{pound}$a{f6}"
	&"{f6}{lt. red}Recording Error, Please Wait...":d$=str$(x)+" ("+d$+" ERROR)"
' 1027	dr=3:a$="e."+b$+",s,"+a$:goto {:1011}
	b$="errlog":a$="a":gosub {:1027}:if e% then a$="w":gosub {:1027}
{:4024}
{number:4024}
	print# 2,na$r$id;r$d1$r$ac%;r$ph$r$rn$r$co$(co%)r$"Error Log"r$
	print# 2,"Error :"d$r$"Line  :"el;r$"Area  : "cm$r$"Prompt: "p$
	print# 2,"Program: +."pr$:print# 2,"Module: +/"lm$:print# 2,"IM Module: im."im$
	print# 2,"ML File: ++ "ml$" ("d4$")"
	for i=1 to 10:a$=chr$(58-i):if hs$(i)<>""then print# 2," {f8}"a$": "hs$(i)
	next:print# 2,"{up arrow}":close 2
	a$="User  : "+na$+r$+"Error :"+d$+r$+"Line  :"+str$(b)+r$+"Time  : {$04}"+d1$+r$
	a$=a$+"Pfile : "+pr$+r$+"Area  : "+cm$+r$+".":gosub {:1096}
	close 2:&,37:for x=1 to 4:&,11,x:next:sy$="":sb$="":sg=.
	im$="":is=.:lm$="":pr$="":ml$="":pr=-1:pf=.
' &,52,4,3: is "console mode" enabled? (true local login)
' peek(2033)=0: carrier status
	if ac%<>16 then:&,52,4,3:if a% or (peek(2033)and 1)=. then {:4050}
	a$="lo":f1=2:goto {:1016}
	a$="FATAL ERROR!!":gosub {:1096}:sys 64789:print"{clear}{altdis}{white}{lower}{down:2}"a$:end
{:4050}
{number:4050}
' &,52,4,3: is "console mode" enabled? (true local login),
'	or immediate login, or sysop (id=1) logged in
' 1065: open "u.config" record #1: get sysop handle
'	was:	&,2,2:i1$=a$:close 2	(15 bytes)
'	try:	input# 2,i1$		( 6 bytes, 1011 closes lfn #2)
' i1$=temp variable (unused anywhere else in 'im')
	&,52,4,3:on -(a%=1 or i% or id=1) goto {:4068}:gosub {:1065}:x=1:gosub {:1001}:input# 2,i1$
	kk=.:a$="s.errmail,s,r":dr=1:gosub {:1011}:if e%then close 2:goto {:4068}
{:4054}
{number:4054}
	kk=kk+1:&,2,2:s=(64 and st):tt$(kk)=a$:if s=.then {:4054}
	close 2:tt$=na$:a$="a":gosub {:1062}:if e%then a$="w":gosub {:1062}
	a$="[System Error ("+d$+")]":a=.:print# 2,i1$r$1;r$d1$r$a$r$
	gosub {:1074}:close 15
	gosub {:1060}:i=1:x=14:gosub {:1025}:x=25:gosub {:1025}:x=32:gosub {:1025}:close 2
' total: 25 backspaces - original mci commands were "{pound}h9{pound}h9{pound}h7"
' TODO: shorten this to {pound}ho{pound}h9?
	&"{pound}h9{pound}h9{pound}h7ed!{f6:2}{white}{$07}You Have New E-Mail Waiting:{f6:2}{green}Read Now? ":gosub {:1902}
	if a then a$="E"+"M":goto {:1016}
{:4068}
{number:4068}
	pr$="":goto {:1811}
	data "errors"
	data "TOO MANY FILES","FILE OPEN","FILE NOT OPEN"
	data "FILE NOT FOUND","DEVICE NOT PRESENT","NOT INPUT FILE"
	data "NOT OUTPUT FILE","MISSING FILE NAME","ILLEGAL DEVICE NUMBER"
	data "NEXT WITHOUT FOR","SYNTAX","RETURN WITHOUT GOSUB"
	data "OUT OF DATA","ILLEGAL QUANTITY","OVERFLOW"
	data "OUT OF MEMORY","UNDEF'D STATEMENT","BAD SUBSCRIPT"
	data "REDIM'D ARRAY","DIVISION BY ZERO","ILLEGAL DIRECT"
	data "TYPE MISMATCH","STRING TOO LONG","FILE DATA"
	data "FORMULA TOO COMPLEX","CAN'T CONTINUE","UNDEF'D FUNCTION"
	data "VERIFY","LOAD","BREAK "
{crunch:off}
	copr. 1994 new image 9/21/94
