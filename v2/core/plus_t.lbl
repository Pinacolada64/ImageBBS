{number:3000}
{step:2}
{crunch:on}
{alpha:invert}

{undef:use_term_dialer}
' ISSUE: address:port dials ok on cmd line, but doesn't if dialed from phonebok
' FIXED: run through &,15,2 (or GOSUB 1500) to un-translate ":"
' FIXED: phone book struct load/edit/save + modify flag
' REMOVE: code meant to check for time of day/weekend, purpose unknown
' CHANGE: Internal dialer code now conditional (why use it? use +/modem)
' FIXME: File transfers broken... loads screen mask, but does not transmit anything
'	X-Tec says file transfers work ok for him using BBS Server
' TODO: per-entry graphics mode/translation flags
' Issue: Are structs twice as big as they need to be? 20 blocks for 20 entries? although they are compatible with
'	just having run "+.convert phone"...
' Issue: phone book redial, 1st attempt AT command error, C= hit, aborts to terminal mode, not phone book
' Issue: Phone book redial, 1st attempt at command error, 2nd attempt dials "Sent" (c$ from {:sub.dialer}
' Issue: Quit terminal, +.lo detects off-hook (or something), so immediately goes to answer the "call"
' Fixed: DOS prompt prompts on n0: and s0: commands

	gosub 2100:dim s%(24,100):goto {:3100}
{:3002}
	l$="{$c0:35}":return
' does not work:
'	l$="{pound}o{$c0}{$c0:16}":return
{:sub.delay}
' wait x tenths of a second
	&,22,x*5:return
{:3006}
	a=abs(int(val(an$))):return
{:sub.prompt_unsaved_changes}
' tz: for phonebook; f-keys are 'cf'
' f$="Save/Load/Quit"
' There Are Unsaved Changes. Save/Load/Quit?: [Yes]
' returns a=0: no, a=1: yes
	&"{$d4}here {$c1}re {$d5}nsaved {$c3}hanges. {pound}$f?: ":gosub 1907:return

{:3010}
	a=val(left$(mt$,1)):a=a+(a=1):&,41,a:qb=2^a*300:return
{:3012}
	a%=mn%-bl%:b=bl:&"{f6}{pound}!f {$c6}iles {$d4}ransfered{f1} {pound}!b {$c2}ytes.{f6} {$d4}ransfer {$d4}ime: {pound}%a.{f6}":return
{:term_mode}
' PASCII Terminal Mode. (C= + CTRL Exits)
	gosub {:sub.show_gfx_mode}:&,18,0:&"{clear}{pound}q0{pound}$b{$d4}erminal {$cd}ode. ({$c3}= + {$c3}{$d4}{$d2}{$cc} {$c5}xits){f6:2}":&,10:goto {:main_menu}
{:3016}
	&"{clear}{f6:2}{lt. blue}{$d4}ransfer {$c3}omplete!{f6}":&,25:return
{:sub.clear_modified_flag}
	tz=tz and -(e%<>.):return
{number:3022}
{:sub.show_gfx_mode}
' (P)ASCII, ANSI
	&,52,16,3:b$=mid$("{$d0}{$c1}{$d3}{$c3}{$c9:2} ",a%+1):&,52,18,3:if a%=. then b$="{$c1}{$ce}{$d3}{$c9}  "
{:3024}
' (C/I)BM
	&,52,19,3:c$=mid$("{$c3}{$c9}",a%+1,1)+"{$c2}{$cd}":return
{:3026}
	&"300{f6}":qb=300:&,41,0:goto {:3032}
{:3028}
	&"1200{f6}":qb=1200:&,41,2:goto {:3032}
{:3030}
	&"2400{f6}":qb=2400:&,41,3
{:3032}
	print# 131,"at":&,22,5:return
{:3034}
' display SB/UD/UX/GF drive info?
	goto 2104
{:sub.save_ascii_state}
' save current state of ASCII translation; if it's off, enable it
	&,52,16,3:bl%=a%:if a%=.then:&,52,16,1
	return
{:sub.restore_ascii_state}
	&,52,16,bl%:return
{:sub.frame_b$}
	gosub {:3002}:&"{clear}{yellow} {$b0}{pound}$l{$c0}{$ae}{f6}"
	&" {yellow}{$dd}{cyan}{rvrs on}{pound}{back arrow}"+right$(str$(int(120-len(b$)/2)),2)
	&"{pound}$b{pound}{back arrow}38{yellow}{rvrs off}{$dd}{f6}{yellow} {$ad}{pound}$l{$c0}{$bd}{f6}":return
{:3048}
	b=-(rc<>1)*int(rc/254+.999):return
{number:3100}
{:3100}
	poke 53248,1:poke 53251,101:&,52,16,0:&,52,16,3:nl=a%:tt$="t":a=.:gosub 1667
	&"{clear}":an$="*{$c9}mage {$d4}erm 1.3*":&,9:&"{f6:2}"
' fixme: mf/kk seems to be unused
	&,52,2,4:d1%=8:d2%=.:poke 53252,40:kk=mf:mf=1
	dr=5:gosub 1009:a$=dr$+"+/modem":load a$,dv%:gosub {:3010}:gosub {:3242}
' tz=0: unmodified phone book
	gosub {:sub.load_phonebook}:tz=.
{number:3120}
{:main_menu}
' set line length to 40, turn screen mask on
	poke 53252,40:&,18,1
{:3122}
	a$="s.menu t1":dr=1:gosub 1076
' 4=phone book
	gosub {:3006}:on a goto {:term_mode}, {:3150}, {:3200}, {:show_phonebook}, {:disconnect}, {:3474}, {:3476}, {:3502}, {:3556}
	on-(an$="0")goto {:3568}:goto {:3122}
{number:3150}
{:3150}
' DOS options
	a$="s.menu t2":dr=1:gosub 1076
	gosub {:3006}:on a goto {:3164},{:3166},{:3168},{:3182}:goto {:main_menu}
{number:3164}
{:3164}
' 1500: &,15,2
'	&"{f6}{lt. blue}{$c4}isk {$c3}ommand: {pound}i0":gosub 1500:dr=0:gosub 1010:print# 15,an$:x=2:gosub {:sub.delay}:gosub 1012:&:gosub {:sub.delay}:goto {:3150}
' 1008: prompt for device/drive
' 1450: evaluate device/drive given, un-translate an$, protect against n0: or s0:
	gosub 1008:&"(@={$c4}{$cf}{$d3} {$d3}tatus){f6}":gosub 1450:goto {:3150}
{:3166}
' disk directory
	&"{lt. blue}":gosub 1008:gosub 1089:x=5:gosub {:sub.delay}:goto {:3150}
{:3168}
	&"{f6}{lt. blue}{$c6}ilename: {pound}i0":on-(an$="")goto {:3150}:f$=an$
	&"{f6} ({$d3})eq {$cf}r ({$d0})rg?: {pound}g1{pound}v7{f6}":if an$<>"{$d3}"and an$<>"{$d0}"then an$="{$d3}"
	t$=chr$(asc(an$)and 127):gosub 1008:gosub 1470:on-(t$="s")goto {:3180}:x%=pr:pr=-2
	dr=5:gosub 1010:a$=dr$+"++ read":&,7,dv%,2:gosub 1012:if e%or t$<>"p"then{:3178}
' fixme: reading a PRG file (+.greed) displays "Load Address: $0801" but not the program text
	a$=f$+","+t$+",r":gosub 1011:&"{lt. blue}":&,16,0,80:close 2
{:3178}
	a=x%:gosub 1667:goto {:3150}
{:3180}
	a$=f$:gosub 1075:goto {:3150}
{:3182}
	a%=d1%:&"{f6}{lt. blue}{$d5}/{$c4} {$c4}evice# : {pound}%a{f6}{$ce}ew {$c4}evice#?: {pound}i1{f6}":a=val(an$)
	if a>0 and a<7 then dr=a:gosub 1009:d1%=dv%:d2%=val(dr$):goto {:3192}
	if a=>7 and a<=15 then d1%=a
	a%=d2%:&"{$d5}/{$c4} {$c4}rive#  : {pound}%a{f6}{$ce}ew {$c4}rive#? : {pound}i1":a=val(an$)
	if an$<>""and a=>.then d2%=val(an$)
{:3192}
	goto {:3150}
{number:3200}
{:3200}
' terminal parameters:
	a$="s.menu t3":dr=1:gosub 1076
	gosub {:3006}:on a goto {:3214}, {:3224}, {:3228}, {:3230}, {:3234}, {:3238}, {:3256}:goto {:main_menu}
{number:3214}
{:3214}
' todo: make this into a subroutine, use it to set phone book entry graphics type?
' 1. PETSCII
' 2. ASCII
' 3. ANSI
	&"{f6}{lt. blue}{$c1}vailable {$cd}odes:{f6:2} 1. {$d0}{$c5}{$d4}{$c1}{$d3}{$c3}{$c9:2}{f6} 2. {$c1}{$d3}{$c3}{$c9:2}{f6} 3. {$c1}{$ce}{$d3}{$c9}{f6:2}{$d7}hich?: {pound}g1{pound}v7{f6}":gosub {:3006}
	if a<1 or a>3 then{:3200}
	&,52,16,0:&,52,18,0:on-(a=3)goto {:3220}:&,52,16,a-1:on-(a-1=1)goto {:3222}:&,52,19,0:goto {:3222}
{:3220}
	&,52,16,1:&,52,18,1
{:3222}
	goto {:3200}
{:3224}
' (C)BM or (I)BM Graphics?:
	&"{f6}{lt. blue} ({$c3}){$c2}{$cd} {$cf}r ({$c9}){$c2}{$cd} {$c7}raphics?: {pound}g1{pound}v7{f6}":a=-(an$="{$c9}")
	&,52,19,a:goto {:3200}
{:3228}
' change transfer protocol
	gosub 1666:x=4:gosub {:sub.delay}:goto {:3200}
{:3230}
'	&"{f6}{lt. blue}(3)00,(1)200,(2)400: {pound}g1":gosub {:3006}:if a<1 or a>3 then:&"{$ce}o {$c3}hange{f6}":x=5:gosub {:sub.delay}:goto {:3200}
'	on a gosub {:3028},{:3030},{:3026}:x=5:gosub {:sub.delay}:goto {:3200}
' reason for the x=... is on-gosub cannot deal with an expression resolving to 0. 
' crashes if a<>1-3 and "on a gosub" is used. wanted to just have 1 {:sub.delay} call

' 1 inputa:x=-(a=1)-2*(a=2)-3*(a=3):ifx=.thenprint"bad value"
' 2 onxgosub10,20,30:print"loop":goto1
' 10 print10:return
' 20 print20:return
' 30 print30:return
' 
' print -(0)-2*(-1)-3*(0)
'  2

' originally written like this, but line too long to edit on the '64:
'	&"{f6}{lt. blue}(3)00, (1)200, (2)400: {pound}g1":gosub {:3006}:x=-(a=1)-2*(a=2)-3*(a=3):on x gosub {:3028}, {:3030}, {:3026}:if x=. then:&"{$ce}o {$c3}hange{f6}"
'	x=5:gosub {:sub.delay}:goto {:3200}

' a lot of fussing for little payoff, but I was feeling pedantic
'...actually, just re-use {:sub.choose_baud_rate}...
	&"{f6}{lt. blue}(3)00, (1)200, (2)400: {pound}g1":gosub {:3006}:x=-(a=1)-2*(a=2)-3*(a=3):if x=. then:&"{$ce}o {$c3}hange{f6}"
	on x gosub {:3028}, {:3030}, {:3026}:x=5:gosub {:sub.delay}:goto {:3200}
{:3234}
	a=-(tt$="t"):b$=mid$("{$d4}one {$d0}ulse",a*5+1,5):tt$="t":if a then tt$="p"
	&"{f6}{lt. blue}{$c4}ial {$cd}ode: {pound}$b{f6}":x=5:gosub {:sub.delay}:goto {:3200}
{:3238}
	&,52,17,2:&,52,17,3:b$=mid$("ffn ",a%*2+1,2):&"{f6}{$cc}inefeeds: {$cf}{pound}$b{f6}"
	x=5:gosub {:sub.delay}:goto {:3200}
{:3242}
	a$="term":goto {:3246}
{:3244}
	a$="f"
{:3246}
' open either "e.fkeys" or "e.termkeys":
	a$="e."+a$+"keys":dr=3:gosub 1011:if e% then for i=1 to 8:tt$(i)="":next:goto {:3252}
	for i=1 to 8:&,2,2:if right$(a$,1)="{back arrow}"then a$=left$(a$,len(a$)-1)+r$
	tt$(i)=a$:next
{:3252}
	close 2:f1$=tt$(1):f2$=tt$(2):f3$=tt$(3):f4$=tt$(4):f5$=tt$(5)
	f6$=tt$(6):f7$=tt$(7):f8$=tt$(8):return
{:3256}
	gosub {:3242}:cf=.
{:3258}
	&"{f6}{$c6}unction {$cb}ey {$c5}ditor{f6}{pound}vj":for i=1 to 8:a$=left$(tt$(i),35):a%=i
	&"{lt. blue}{$c6}{pound}#1{pound}%a{blue}) {white}{pound}$a{f6}":i=i+rc*n:next
	&"{white}{pound}vj{$c5}{lt. blue}dit {$d7}hich{blue}?{white} {pound}g1":a=val(an$):if a<1 or a>8 then{:3270}
	&"{pound}v7{f6}":w$=tt$(a):p$="{$c6}"+chr$(48+a)+" ({f5}{back arrow}{f5} = {$d2}{$c5}{$d4}{$d5}{$d2}{$ce})":poke 53252,75:pl=0:&,1,32
	if an$<>""then tt$(a)=an$:cf=1
	goto {:3258}
{:3270}
	&"{$d1}uit{f6}":if cf=.then{:3200}
	&"{f6}{$d3}ave {$c3}hanges?: ":gosub 1902:if a=.then{:3200}
	a$="e.termkeys":dr=3:gosub 1023:for i=1 to 8:print# 2,tt$(i):next
	close 2:gosub {:3242}:goto {:3200}
{number:3300}
{:disconnect}
	&"{f6}{$c8}anging {$d5}p...":x=3:gosub 4000:x=3:gosub {:sub.delay}:goto {:main_menu}

{ifdef:use_term_dialer}
{:3302}
	gosub {:3010}:print# 131,"ate0v0":&,22,20:x=9:gosub 4000
' x=6: dial b$=name, c$=phone #, baud rate b (6=14400)
'	return a=0: no connection, a=1: connected
'	r=1:gosub {:sub.save_ascii_state}:gosub {:sub.dial}:t=200:if b<>1 then {:show_phonebook}
	r=1:gosub {:sub.save_ascii_state}:gosub {:sub.dial}:if a=. then {:show_phonebook}
' 97="A"
	t=200:print# 131,chr$(97);:&,22,5:&"a"
{:3308}
' 88="x", 120="X"
	t=t-1:&,4:a=peek(780)and 127:if a<>88 and a<>120 and t>0 then{:3308}
	x=50:c%=.:b%=.
{:3312}
	print# 131,chr$(97);:&,22,5:&"a"
	x=x-1:t=100
{:3316}
	t=t-1:&,4:a=peek(780):a$=chr$(a):if a then c%=b%:b%=a%:a%=a:&:t=t+1
' 105="I", 73="i", 110="N", 78="n", 58=":"
	a=-((c%=105 or c%=73)and(b%=110 or b%=78)and a%=58):if a=.and t>0 then{:3316}
	if a=0 and x>0 then{:3312}
	t=.:print# 131,us$":"mid$(str$(f%),2)";"ps$
{:3324}
' dupe
	&,4:a=peek(780):a$=chr$(a):if a then:&:t=.:goto {:3324}
	t=t+1:if t<100 then{:3324}
' dupe
	t=.:&,22,10:print# 131,"d "f$
{:3330}
' dupe
	&,4:a=peek(780):a$=chr$(a):if a then:&:t=.:goto {:3330}
	t=t+1:if t<100 then{:3330}
' dupe
	gosub {:sub.restore_ascii_state}:goto {:term_mode}
{endif}

{number:3336}
{:3336}
' edit phonebook entry
' can enter E1 to edit entry #1, or E <Return> to be prompted:
	&"{f6}":a=val(mid$(an$,2,2)):if a$=an$ then:&"{$c5}dit {$d7}hich? {pound}i1":a=val(an$)
	if a<1 or a>20 then{:show_phonebook}
'	p$="{$c2:2}{$d3} {$ce}ame  ":pl=.:poke 53252,16:w$=nn$(a):&,1,32:if an$<>""then nn$(a)=an$

'	PutStruc: put string into structure
'	Usage	&,60,0,<bytes>,array%(<col>,<row>),<string>
'	Example:&,60,0,11,lm%(2,x),a$

' tz=1: phonebook modified flag
' edit/store BBS name: get struct into w$, store from an$
	p$="{$c2:2}{$d3} {$ce}ame  ":pl=.:&,60,1,16,s%(1,a),w$:poke 53252,16:&,1,32
	if an$<>"" then:&,60,0,16,s%(1,a),an$:tz=1
' edit/store phone number: get struct into w$, store from an$
' need to allow uppercase/lowercase input (pl=.); uppercase letters result in AT command errors
	p$="{$c2:2}{$d3} {$ce}umber":pl=.:&,60,1,14,s%(17,a),w$:poke 53252,14:&,1,32
	if an$<>"" then:&,60,0,14,s%(17,a),an$:tz=1
{number:3350}
{:show_phonebook}
' display phone book
' turn screen mask off
	&"{clear}":&,18,0:a=. ':s$="                                "
'	for i=1 to 20:&,60,1,32,s%(1,i),b$:b$=left$(b$+s$,32)
'	a$=right$(str$(i),2):c$=" ":if s%(0,i)then c$="*"
'	tt$(i)="  "+a$+" "+b$+c$+"  ":&,69,0,i+1,tt$(i),3:next:x=1

' sample s.phone entries:
'[1]0000Port Commodore  1 801 4232734 [artifact from writing "1e5+<starlink_id>", unused]
' 100000Lyon's Den East 1 313 4532576
' 100000GearJammer's II 1 215 4870463
' [00000]nchanted Forest1 215 8251136 [starlink id]

' +.t 2.0 phone book:
' ------------- Phone Book -------------
' 1) xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx      (30)
'    aaaaaaaaaaaaaaaaaa   2400   PetSCII (18, baud: 4, gfx: ?)
'20) xxx...
' struct (&,60,) get (1,) 16 bytes (16,) from array pos s%(1,i) BBS name (b$): 
	gosub {:3002}:for i=1 to 20:n%=i:&,60,1,16,s%(1,i),b$
' new:

' struct (&,60,) get (1,) 14 bytes (14,) from array pos s%(17,i) phone # (c$):
	&,60,1,14,s%(17,i),c$
' new:	

	&"{pound}#2{pound}# {pound}%n) {pound}$b{pound}{back arrow}24{pound}$c{f6}"
	next:&"{pound}$l{f6}"
' Enter: #, Dial, Edit, Load, Save? 
	&"{$c5}nter: #, {$c4}ial, {$c5}dit, {$cc}oad, {$d3}ave? {pound}i1":a$=left$(an$,1)
' dial, load, save, edit
	on -(an$="{$c4}")-2*(an$="{$cc}")-3*(an$="{$d3}")-4*(a$="{$c5}") goto {:3388}, {:3392}, {:3394}, {:3336}
	a=val(an$):if a<1 or a>20 then{:main_menu}
' get bbs name: empty entry?
	&,60,1,16,s%(1,a),b$:if b$="" then {:show_phonebook}
	gosub {:sub.frame_b$}
' get phone #: an$
	&,60,1,14,s%(17,a),an$
{:3376}
' &,15,2: un-translate an$ (mainly ':' if any).
' removed tt$=dial type ([p]ulse or [t]one): interferes with +/modem dialing (assumes atdT) . 
' also called from "dial unlisted number"
	&,15,2:c$=an$
{:3378}
' x=9:gosub 4000 - get char from modem until send/recv buffer empty
	gosub {:3010}:print# 131,"ate0v0":x=9:gosub 4000
	&"{f6}{lt. blue} {$c1}uto {$d2}edial?: ":gosub 1902:r=a ':c$=an$:an$=z$:&"{f6:2}{pound}$z "
' sub.choose_baud_rate returns with a%=300/1200/2400, b=1-3
	gosub {:sub.choose_baud_rate}:a%=.
' attempt?
{:redial}
' Attempt #xx: Press "C=" to Abort
	a%=a%+1:&"{$c1}ttempt #{pound}%a: {$d0}ress {f5}{$c3}={f5} to {$c1}bort"
' x=6: dial b$=name, c$=address, b=baud rate (1=300, 2=1200, 3=2400)
' returns a=1: connection a=0: no connection
	gosub {:sub.save_ascii_state}:gosub {:sub.dial}:if a then:&,18,0:gosub {:sub.restore_ascii_state}:goto {:term_mode}
	on r goto {:redial}:goto {:show_phonebook}
{:3388}
' dial # not in phone book:
' 3042: frame b$
' 3452: ask address:port (returns an$=address)
	b$="{$c4}ial {$d4}elnet":gosub {:sub.frame_b$}:gosub {:sub.ask_address}:if fl=. then {:show_phonebook}
	b$="{$d5}nlisted {$ce}umber":goto {:3376}
{:3392}
	gosub {:sub.load_phonebook}:goto {:show_phonebook}
{:3394}
' called with goto from main menu, but gosub'ed at quit, so wrapper thing:
	gosub {:sub.save_phonebook}:goto {:show_phonebook}
{:sub.save_phonebook}
' scratch existing e.phone:
	&"{$d3}aving {$d0}honebook":a$="e.phone":dr=3:gosub 1024
'	for i=1 to th:print# 2,mid$(str$(f%(i)+1e5),2);left$(nn$(i)+s$,16)dt$(i)
'	next:close 2:goto {:show_phonebook}
	
' s%(0,0) = # of entries. save struct, clear modified flag if saved successfully:
	s%(0,0)=20:a$=dr$+a$:&,60,3,0,s%(0,0),5050,a$,dv%:gosub 1012:&:gosub {:sub.clear_modified_flag}:return

{number:3400}
{:sub.load_phonebook}
' There Are Unsaved Changes. Load?: [No]
	if tz then f$="{$cc}oad":gosub {:sub.prompt_unsaved_changes}:if a=. then return
' load struct:
	&"{$cc}oading {$d0}honebook":dr=3:gosub 1010:a$=dr$+"e.phone":&,60,2,0,s%(0,0),a$,dv%:gosub 1012
' unsaved changes and couldn't load phone book? keep tz=1. otherwise don't modify tz
' tz=1:e%=.:tz=tz and -(e%<>.):? tz - try playing with various values of e% and tz,
' 	watch how that affects tz
' fixme: keep track of # of phonebook entries; but for now, 20 unless error occured:
' e%=1:s=-20*(e%=.):?s - same here
	gosub {:sub.clear_modified_flag}:if e% then s%(0,0)=0
	return
{:sub.dial}
' x=6: dial b$=name, c$=phone #, baud rate b (6=14400)
'	&"{$c8}it {$d9}our {$c3}= {$d5}pon {$c3}onnecting{f6}"
'	x=6:gosub 4000:&,22,5:t=400:b=.:gosub {:3420}:on a goto {:3418}
' dialer returns a=0 if no connection, a=1 if connection made
	x=6:gosub 4000:&,22,5:return

{ifdef:use_term_dialer}
{:3410}
	t=t-1:on-(t<0)goto {:3414}:gosub {:3420}:on a goto {:3418}:&,4:b=val(chr$(peek(780)and 127))
' b=0: loop, b=1: error (return to dialer), b=2: connect
	gosub {:sub.modem_response}:on b goto {:3414},{:3416}:goto {:3410}
{:3414}
	print# 131:&,22,20:on r goto {:sub.dial}:b=.
{:3416}
	b=1:return
{:3418}
	print# 131:&"({$c1}borted){f6:2}":b=.:return
{:3420}
' check for c= key
	a=-(peek(653)=2 or rc>0 or t<0):return
{:sub.modem_response}
	on b goto {:3424},{:3426},{:3428},{:3430},{:3432},{:3434},{:3436}:return
{:3424}
' 48="0"
	&,4:b=peek(780)and 127:on-(b=48)goto {:3438}:goto {:3440}
{:3426}
	&"{$d2}ing...":b=0:return
{:3428}
	&"{$ce}o {$c3}arrier{f6}":b=1:return
{:3430}
	&"{$c5}rror{f6}":b=1:return
{:3432}
	&"{$c3}onnect 1200{f6}":&,41,2:b=2:return
{:3434}
	&"{$ce}o {$c4}ial{$d4}one{f6}":print# 131:&,22,100:b=1:return
{:3436}
	&"{$c2}usy{f6}":b=1:return
{:3438}
	&"{$c3}onnect 2400{f6}":&,41,3:b=2:return
{:3440}
	&"{$c3}onnect 300{f6}":&,41,0:b=2:return
'	gosub {:3468}:if b then {:3378}
'	f%=f%(a):f$=right$(dt$(a),7):goto {:3302}
{endif}

{:sub.ask_save_phonebook}
' new subroutine, since unsaved changes checked for when exiting terminal
	if tz then f$="{$d3}ave":gosub {:sub.prompt_unsaved_changes}:if a then gosub {:sub.save_phonebook} 
	return

{:sub.ask_address}
' returns an$, fl=1 if input non-blank
' input address to dial: "Enter PH#: ", added &,15,2 to untranslate :
	an$="":&"{white}{$c5}nter address[{f3}port #]: {pound}i0"
' fl=1 for non-empty address
	fl=abs(an$<>""):if fl then:&,15,2
	return
'	&"{white}{$c5}nter {$d0}ort {pound}i0{f6}":f$=f$+an$:an$=f$:return
{:sub.choose_baud_rate}
' Baud (+,- To Change)
' :
	&"{$c2}aud {$d2}ate (+,- {$d4}o {$c3}hange){f6}:":a=qb
{:3456}
	a%=300:gosub {:3466}:a%=1200:gosub {:3466}:a%=2400:gosub {:3466}:&"{pound}g1"
	if an$="+" then a=a-900*(a=300)-1200*(a=1200)+2100*(a=2400)
	if an$="-" then a=a+1200*(a=2400)+900*(a=1200)-2100*(a=300)
	&"{f6}":if an$<>r$ then:&"{up}{right}":goto {:3456}
' set baud rate 'b' for +/modem (from phone book, potentially):
' returns b: 1=300, 2=1200, 3=2400, returns a=300, 1200, 2400
	b=-1*(a=300)-2*(a=1200)-3*(a=2400):return
{:3466}
	&"{pound}#4{pound}#  {pound}r"+chr$(48-(a=a%))+"{pound}%a{rvrs off}":return
' {:3468}
' check console date: sunday or saturday?
'	b=val(left$(d1$,1)):if b=1 or b=7 then b=0:return
' check console time: later than 7 AM or earlier than 7 PM, and not midnight?
'	b=val(mid$(d1$,8,2)):if b>6 and b<87 and b<>12 then b=1:return
'	b=.:return
{number:3474}
{:3474}
	x=1:goto {:3478}
{:3476}
	x=2
{:3478}
	poke 53252,16:&"{f6}{$c6}ilename?: {pound}i0":f$=an$
	&"{f6}({$d0})rg or ({$d3})eq?: {pound}g1{pound}v7{f6}":t$=chr$(asc(an$)and 127)
	if f$=""or(t$<>"p"and t$<>"s")then{:term_mode}
	a$=f$+","+t$:on x goto {:3486},{:3492}:goto {:main_menu}
{:3486}
	b$=a$:a$=b$+",r":dr=0:gosub 1011:if e%then close 2:goto {:3500}
	a$=b$:poke 2043,1:if right$(a$,1)<>"p"then poke 2043,2
	an$=a$:gosub {:3034}:&,16,0:close 2:poke 670,peek(669):goto {:3498}
{:3492}
	b$=a$:a$=b$+",w":dr=0:gosub 1011
	a$=b$:if e%then close 2:goto {:3500}
	an$=a$:gosub {:3034}:&,16,1:close 2:&,22,5:poke 668,peek(667)
{:3498}
	gosub {:3016}:a=rc:&"{f6}{pound}!a {$c2}ytes{f6}{pound}%a {$c7}ood {$c2}lks{f6}{pound}%b {$c2}ad {$c2}lks{f6}"
{:3500}
	x=3:gosub {:sub.delay}:goto {:term_mode}
{:3502}
	dr=0:gosub 1010
' todo: use "im" routine instead (optional auto-wildcard)
	&"{f6}{lt. blue}{$d0}attern: ":gosub 1499:b$="*"
	for i=1 to len(an$):if mid$(an$,i,1)="*"then b$=""
	next:an$=an$+b$:&"{f6}"
	close 1:open 1,dv%,0,"$"+dr$+an$:s=.:bl=.:f%=1:c%=.:sh=.:rc=.
	&"{f6:2} [{$d9}]es [{$ce}]o [{$c5}]very [{$d3}]tart [{$c1}]bort{f6}{pound}vj{f6}":get#1,a$,a$:&,8,1,1:lp=1:&"{pound}$a{f6}"
{:3514}
	&,8,1,1:s=st:if mid$(a$,7,1)="b"then b$=a$:&"{f6}{pound}$b{f6}":goto {:3528}
	b%=val(a$):f$=mid$(a$,8):t$=mid$(a$,26,1):g$=t$
' todo: use &,15,6,34
	for i=2 to 17:if mid$(f$,i,1)=qt$then f$=left$(f$,i-1)
	next:&" {pound}#4{pound}# {pound}%b: {f5}{pound}$f,{pound}$g{f5}":on bl goto {:3526}:&"{pound}{back arrow}32?: {pound}g1":a$=an$
	x=-(a$="{$d9}")-2*(a$="{$d3}")-3*(a$="{$c1}")-4*(a$="{$c5}"):&mid$("{$ce}o   {$d9}es  {$d3}tart{$c1}bort{$c5}very",x*5+1,5)
	bl=-(a$="{$c5}"):on x+1 goto {:3530},{:3526},{:3528},{:3528},{:3526}
{:3526}
	b$=f$+","+t$:tt$(f%)=b$:c%=c%+b%:f%=f%+1:goto {:3530}
{:3528}
	s=1:if x=3 then f%=1
{:3530}
	&"{f6}":if rc or sh then bl=.
	on-(s=.and f%<101)goto {:3514}:close 1:f%=f%-1:on-(f%<1)goto {:main_menu}
	bl%=mn%:bl=.:&"{f6:2}{$d2}eady {$d4}o {$d3}end {pound}#0{pound}%f {$c6}iles.{f6}"
	&"{f6} {$d0}ress {white}{rvrs on}{$d2}{$c5}{$d4}{$d5}{$d2}{$ce}{rvrs off}{lt. blue} {$d4}o {$c2}egin: {pound}g1{f6}":f=1:bb%=0:gosub {:3542}:gosub {:3016}:gosub {:3012}
	x=4:gosub {:sub.delay}:goto {:term_mode}
{:3542}
	an$=tt$(f):&,15,2:a$=an$+",r":dr=0:gosub 1011:if e%then{:3548}
{:3544}
	x=1:gosub {:3034}:&,16,2:&,22,10:&,16,0:gosub {:3048}:if b=.then{:3552}
	&,22,10:on-(f>=f%)goto {:3554}:f=f+1:bl=bl+rc:goto {:3542}
{:3548}
	close 2:on-(f=f%)goto {:3550}:for x=f to f%-1:tt$(x)=tt$(x+1):next
{:3550}
	f%=f%-1:f=f-1:goto {:3544}
{:3552}
	bb%=1:b=0:f=f-1
{:3554}
	an$="":&,16,2:a%=f:return
{:3556}
	&"{clear}{f6:3}{$cd}ulti-{$c4}ownload: {$d7}aiting {$c6}or {$d3}tart...{f6}"
	f=.:bl%=mn%:bl=.:gosub {:3560}:gosub {:3016}:gosub {:3012}:x=4:gosub {:sub.delay}:goto {:term_mode}
{:3560}
	on -(f=>100) goto {:3566}:&,16,3:on -(an$="") goto {:3566}:f=f+1:tt$(f)=an$:a$=an$+",w":dr=0:gosub 1011:if e% then f=f-1:goto {:3566}
	x=2:gosub {:3034}:&,16,1:gosub {:3048}:if b=.then a$=left$(tt$(f),len(tt$(f))-2):f=f-1:goto 1024
	tt$(f)=chr$(b and 255)+chr$(b/256)+tt$(f):bl=bl+rc:goto {:3560}
{:3566}
' 3 ctrl-x's
	print# 131,"{$18:3}";:return
{:3568}
' quit
' trap unsaved phonebook changes:
	f1=.:if tz then f$="{$d3}ave":gosub {:sub.prompt_unsaved_changes}:if a then gosub {:sub.save_phonebook}
' hang up here does not fix the issue
'	&"{f6}{$c8}anging {$d5}p...":x=3:gosub 4000:x=3:gosub {:sub.delay}
' 3244: reload e.fkeys
	gosub {:3244}:on -(i% or id=1) goto {:3572}:poke 53248,0:ac%=16:mf=kk:a$="lo":goto 1016
{:3572}
	gosub 1073:goto 1811
{crunch:off}
	rem COPR. 1991 NEW IMAGE
	rem +.T - X-TEC & PINACOLADA - 2/06/2018