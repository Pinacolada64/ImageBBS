' ml patcher (c) new image software
' re-worked using c64list 3.04 by pinacolada
' 15/Jul/2016 23:07

{number:10}
	sys {sym:ml}

{asm}
; kernal calls:
savefile = $ffd8
loadfile = $ffd5

ptr = $14
num = 2
buf = $fb
sal = 172
eal = 174
first= 3
last = 5


;
adj:	txa
		ldx #0
adj1:	cmp #10
		bcc adj2
		sbc #10
		inx
		bne adj1
adj2:	ora #$30
		cpx #0
		rts
;
prmsg:	sta num
		stx ptr
		sty ptr+1
		ldy #0
prmsg1:	lda (ptr),y
		beq prmsg3
		cmp #"%"
		beq prmsg4
		cmp #"$"
		beq prmsg7
		jsr $e716
		iny
		bne prmsg1
prmsg2: iny
		bne prmsg1
prmsg3: rts
prmsg4: ldx num
		lda #0
prmsg5: pha
		jsr adj
		bne prmsg5
prmsg6: jsr $e716
		pla
		bne prmsg6
		jmp prmsg2
prmsg7: tya
		pha
prmsg8: jsr $ffcf
		cmp #13
		beq prmsg9
		jsr putbuf
		jmp prmsg8
prmsg9: lda num
		jsr putbuf
		pla
		tay
		jmp prmsg2
;
putbuf: ldy #0
		sta (buf),y
		inc buf
		bne putbuf1
		inc buf+1
putbuf1:rts
;
file:	byte "254:ffiilleennaammee"
;
getname:
	jsr prmsg
	ldx #<$200
	ldy #>$200
	stx buf
	sty buf+1
	ldx #<msg4
	ldy #>msg4
	lda #0
	jsr prmsg
	ldx #<file
	ldy #>file
	stx buf
	sty buf+1
	ldx #<msg5
	ldy #>msg5
	lda #colon
	jsr prmsg
	ldx #<msg6
	ldy #>msg6
	lda #0
	jsr prmsg
	ldy #0
	sty num
getname1:
	lda $0200,y
	beq getname2
	cmp #"0"
	bcc getname2
	cmp #":"
	bcs getname2
	sec
	sbc #"0"
	pha
	lda num
	asl
	asl
	clc
	adc num
	asl
	sta num
	pla
	clc
	adc num
	sta num
	iny
	bne getname1
getname2:
	lda #1
	tay
	ldx num
	jsr $ffba
	ldy #0
getname3:
	iny
	lda file,y
	bne getname3
	tya
	ldx #<file
	ldy #>file
	jmp $ffbd
;
getfile:
		jsr getname
		lda #0
		jmp $ffd5
;
msg0:	byte "Image ML Patcher",13,13,0
;
msg1:	byte "Original",0
msg2:	byte "Patch",0
msg3: byte "Output",0
msg4: byte " File:",13
		byte " Device: $",13,0
msg5: byte " Drive: $",13,0
msg6: byte " Filename: $",13,0
;
; bank out basic
ml: lda #$36
	sta 1
	ldx #<msg0
	ldy #>msg0
	jsr prmsg
	ldx #<msg1
	ldy #>msg1
	jsr getfile
	ldx eal
	ldy eal+1
	stx last
	sty last+1
	ldx #<$7000
	ldy #>$7000
	stx first
	sty first+1
	ldx #<msg2
	ldy #>msg2
	jsr getfile
	ldx #<msg3
	ldy #>msg3
	jsr getname
	lda #first
	ldx last
	ldy last+1
	jsr $ffd8
; bank in basic
	lda #$37
	sta 1
	rts
{endasm}
